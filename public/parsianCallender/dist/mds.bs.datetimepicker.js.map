{"version":3,"file":"mds.bs.datetimepicker.js","mappings":"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","sources":["webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker-exposed.ts","webpack://md.bootstrappersiandatetimepicker/./node_modules/expose-loader/dist/runtime/getGlobalThis.js","webpack://md.bootstrappersiandatetimepicker/external var \"bootstrap\"","webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker.ts","webpack://md.bootstrappersiandatetimepicker/webpack/bootstrap","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/define property getters","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/global","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/hasOwnProperty shorthand","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/make namespace object","webpack://md.bootstrappersiandatetimepicker/webpack/startup"],"sourcesContent":["var ___EXPOSE_LOADER_IMPORT___ = require(\"-!../node_modules/ts-loader/index.js!./mds.bs.datetimepicker.ts\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../node_modules/expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","\"use strict\";\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n  var g;\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") {\n      return window;\n    }\n\n    // This works if the self reference is available\n    if (typeof self === \"object\") {\n      return self;\n    }\n\n    // This works if the global reference is available\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n  }\n  return g;\n}();","const __WEBPACK_NAMESPACE_OBJECT__ = bootstrap;","﻿import { Modal, Popover } from \"bootstrap\";\n\nexport class MdsPersianDateTimePicker {\n  constructor(element: Element, setting: MdsPersianDateTimePickerSetting) {\n    setting = MdsPersianDateTimePicker.extend(new MdsPersianDateTimePickerSetting(), setting);\n    if (!element) throw new Error(`MdsPersianDateTimePicker => element is null!`);\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\n    if (setting.toDate && setting.fromDate) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\n    if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\n\n    if (!setting.textFormat) {\n      setting.textFormat = 'yyyy/MM/dd';\n      if (setting.enableTimePicker)\n        setting.textFormat += ' HH:mm';\n    }\n    if (!setting.dateFormat) {\n      setting.dateFormat = 'yyyy/MM/dd';\n      if (setting.enableTimePicker)\n        setting.dateFormat += ' HH:mm';\n    }\n    if (setting.yearOffset > 15)\n      setting.yearOffset = 15;\n\n    this.setting = setting;\n    this.setting.selectedDate = setting.selectedDate ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : null;\n    this.setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow) ?? new Date();\n\n    this.guid = MdsPersianDateTimePicker.newGuid();\n    this.element = element;\n    this.element.setAttribute(\"data-mds-dtp-guid\", this.guid);\n    MdsPersianDateTimePickerData.set(this.guid, this);\n\n    this.initializeBsPopover(setting);\n  }\n\n  // #region jalali calendar\n\n  private static toJalali(gy: number, gm: number, gd: number): JalaliJsonModel {\n    return this.d2j(this.g2d(gy, gm, gd));\n  }\n  private static toGregorian(jy: number, jm: number, jd: number): GregorianJsonModel {\n    return this.d2g(this.j2d(jy, jm, jd));\n  }\n  // private static isValidJalaliDate(jy: number, jm: number, jd: number): boolean {\n  //   return jy >= -61 && jy <= 3177 &&\n  //     jm >= 1 && jm <= 12 &&\n  //     jd >= 1 && jd <= this.jalaliMonthLength(jy, jm);\n  // }\n  private static isLeapJalaliYear(jy: number): boolean {\n    return this.jalCal(jy).leap === 0;\n  }\n  // private static jalaliMonthLength(jy: number, jm: number): number {\n  //   if (jm <= 6) return 31;\n  //   if (jm <= 11) return 30;\n  //   if (this.isLeapJalaliYear(jy)) return 30;\n  //   return 29;\n  // }\n  private static jalCal(jy: number): JalCalModel {\n    // Jalali years starting the 33-year rule.\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\n      bl = breaks.length,\n      gy = jy + 621,\n      leapJ = -14,\n      jp = breaks[0],\n      jm,\n      jump = 1,\n      leap,\n      n,\n      i;\n\n    if (jy < jp || jy >= breaks[bl - 1])\n      throw new Error('Invalid Jalali year ' + jy);\n\n    // Find the limiting years for the Jalali year jy.\n    for (i = 1; i < bl; i += 1) {\n      jm = breaks[i];\n      jump = jm - jp;\n      if (jy < jm)\n        break;\n      leapJ = leapJ + this.div(jump, 33) * 8 + this.div(this.mod(jump, 33), 4);\n      jp = jm;\n    }\n    n = jy - jp;\n\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + this.div(n, 33) * 8 + this.div(this.mod(n, 33) + 3, 4);\n    if (this.mod(jump, 33) === 4 && jump - n === 4)\n      leapJ += 1;\n\n    // And the same in the Gregorian calendar (until the year gy).\n    let leapG = this.div(gy, 4) - this.div((this.div(gy, 100) + 1) * 3, 4) - 150;\n\n    // Determine the Gregorian date of Farvardin the 1st.\n    let march = 20 + leapJ - leapG;\n\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6)\n      n = n - jump + this.div(jump + 4, 33) * 33;\n    leap = this.mod(this.mod(n + 1, 33) - 1, 4);\n    if (leap === -1) leap = 4;\n\n    return {\n      leap: leap,\n      gy: gy,\n      march: march\n    };\n  }\n  private static j2d(jy: number, jm: number, jd: number): number {\n    let r = this.jalCal(jy);\n    return this.g2d(r.gy, 3, r.march) + (jm - 1) * 31 - this.div(jm, 7) * (jm - 7) + jd - 1;\n  }\n  private static d2j(jdn: number): JalaliJsonModel {\n    let gy = this.d2g(jdn).gy, // Calculate Gregorian year (gy).\n      jy = gy - 621,\n      r = this.jalCal(jy),\n      jdn1F = this.g2d(gy, 3, r.march),\n      jd,\n      jm,\n      k;\n\n    // Find number of days that passed since 1 Farvardin.\n    k = jdn - jdn1F;\n    if (k >= 0) {\n      if (k <= 185) {\n        // The first 6 months.\n        jm = 1 + this.div(k, 31);\n        jd = this.mod(k, 31) + 1;\n        return {\n          jy: jy,\n          jm: jm,\n          jd: jd\n        };\n      } else {\n        // The remaining months.\n        k -= 186;\n      }\n    } else {\n      // Previous Jalali year.\n      jy -= 1;\n      k += 179;\n      if (r.leap === 1)\n        k += 1;\n    }\n    jm = 7 + this.div(k, 30);\n    jd = this.mod(k, 30) + 1;\n    return {\n      jy: jy,\n      jm: jm,\n      jd: jd\n    };\n  }\n  private static g2d(gy: number, gm: number, gd: number): number {\n    let d = this.div((gy + this.div(gm - 8, 6) + 100100) * 1461, 4) +\n      this.div(153 * this.mod(gm + 9, 12) + 2, 5) +\n      gd - 34840408;\n    d = d - this.div(this.div(gy + 100100 + this.div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n  }\n  private static d2g(jdn: number): GregorianJsonModel {\n    let j;\n    j = 4 * jdn + 139361631;\n    j = j + this.div(this.div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\n    let i = this.div(this.mod(j, 1461), 4) * 5 + 308;\n    let gd = this.div(this.mod(i, 153), 5) + 1;\n    let gm = this.mod(this.div(i, 153), 12) + 1;\n    let gy = this.div(j, 1461) - 100100 + this.div(8 - gm, 6);\n    return {\n      gy: gy,\n      gm: gm,\n      gd: gd\n    };\n  }\n  private static div(a: number, b: number): number {\n    return ~~(a / b);\n  }\n  private static mod(a: number, b: number): number {\n    return a - ~~(a / b) * b;\n  }\n\n  //#endregion jalali calendar\n\n  // #region Template\n\n  private static modalHtmlTemplate =\n    `<div data-mds-dtp data-mds-dtp-guid=\"{{guid}}\" class=\"modal fade mds-bs-persian-datetime-picker-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n\t  <div class=\"modal-content\">\n      <div class=\"modal-header\" data-mds-dtp-title=\"true\">\n        <h5 class=\"modal-title\">Modal title</h5>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\n        <div data-name=\"mds-dtp-body\"></div>\n      </div>\n    </div>\n  </div>\n</div>`;\n  private static popoverHtmlTemplate = `<div class=\"popover mds-bs-persian-datetime-picker-popover\" role=\"tooltip\" data-mds-dtp>\n<div class=\"popover-arrow\"></div>\n<h3 class=\"popover-header text-center p-1\" data-mds-dtp-title=\"true\"></h3>\n<div class=\"popover-body p-0\" data-name=\"mds-dtp-body\"></div>\n</div>`;\n  private static popoverHeaderSelectYearHtmlTemplate = `<table class=\"table table-sm table-borderless text-center p-0 m-0 {{rtlCssClass}}\" dir=\"{{dirAttrValue}}\">\n<tr>\n<th>\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{previousText}}\" data-year=\"{{latestPreviousYear}}\" data-year-range-button-change=\"-1\" {{prevYearButtonAttr}}> &lt; </button>\n</th>\n<th class=\"pt-1\">\n{{yearsRangeText}}\n</th>\n<th>\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{nextText}}\" data-year=\"{{latestNextYear}}\" data-year-range-button-change=\"1\" {{nextYearButtonAttr}}> &gt; </button>\n</th>\n</tr>\n</table>`;\n  private static dateTimePickerYearsToSelectHtmlTemplate = `<table class=\"table table-sm text-center p-0 m-0\">\n<tbody>\n{{yearsBoxHtml}}\n<tr>\n<td colspan=\"100\" class=\"text-center\">\n<button class=\"btn btn-sm btn-light w-100\" data-mds-hide-year-list-box=\"true\">{{cancelText}}</button>\n</td>\n</tr>\n</tbody>\n</table>`;\n\n  private static dateTimePickerHtmlTemplate = `<div class=\"mds-bs-dtp-container {{rtlCssClass}}\" {{inlineAttr}}>\n<div class=\"select-year-inline-box w-0\" data-name=\"dtp-years-container\">\n</div>\n<div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\n<table class=\"table table-sm text-center p-0 m-0\">\n<thead>\n<tr {{selectedDateStringAttribute}}>\n<th mds-dtp-inline-header colspan=\"100\">{{dtpInlineHeader}}</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n{{monthsTdHtml}}\n</tr>\n</tbody>\n<tfoot>\n<tr {{timePickerAttribute}}>\n<td colspan=\"100\" class=\"text-center border-0\">\n<input type=\"time\" value=\"{{time}}\" maxlength=\"2\" data-mds-dtp-time />\n</td>\n</tr>\n<tr>\n<td colspan=\"100\">\n<button type=\"button\" class=\"btn btn-light\" title=\"{{goTodayText}}\" data-mds-dtp-go-today>{{todayDateString}}</button>\n</td>\n</tr>\n</tfoot>\n</table>\n</div>`;\n\n  private static dateTimePickerMonthTableHtmlTemplate = `<td class=\"border-0\" style=\"{{monthTdStyle}}\" {{monthTdAttribute}} data-td-month>\n<table class=\"table table-sm table-striped table-borderless\">\n<thead>\n<tr {{monthNameAttribute}}>\n<th colspan=\"100\" class=\"border-0\">\n<table class=\"table table-sm table-borderless\">\n<thead>\n<tr>\n<th>\n<button type=\"button\" class=\"btn btn-light\"> {{currentMonthInfo}} </button>\n</th>\n</tr>\n</thead>\n</table>\n</th>\n</tr>\n<tr {{theadSelectDateButtonTrAttribute}}>\n<td colspan=\"100\" class=\"border-0\">\n<table class=\"table table-sm table-borderless\">\n<tr>\n<th>\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousYearText}}\" data-change-date-button=\"true\" data-number=\"{{previousYearButtonDateNumber}}\" {{previousYearButtonDisabledAttribute}}> &lt;&lt; </button>\n</th>\n<th>\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousMonthText}}\" data-change-date-button=\"true\" data-number=\"{{previousMonthButtonDateNumber}}\" {{previousMonthButtonDisabledAttribute}}> &lt; </button>\n</th>\n<th style=\"width: 120px;\">\n<div class=\"dropdown\">\n<button type=\"button\" class=\"btn btn-light btn-sm dropdown-toggle w-100\" id=\"mdtp-month-selector-button-{{guid}}\"\ndata-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n{{selectedMonthName}}\n</button>\n<div class=\"dropdown-menu\" aria-labelledby=\"mdtp-month-selector-button-{{guid}}\">\n<a class=\"dropdown-item {{selectMonth1ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth1DateNumber}}\">{{monthName1}}</a>\n<a class=\"dropdown-item {{selectMonth2ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth2DateNumber}}\">{{monthName2}}</a>\n<a class=\"dropdown-item {{selectMonth3ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth3DateNumber}}\">{{monthName3}}</a>\n<div class=\"dropdown-divider\"></div>\n<a class=\"dropdown-item {{selectMonth4ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth4DateNumber}}\">{{monthName4}}</a>\n<a class=\"dropdown-item {{selectMonth5ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth5DateNumber}}\">{{monthName5}}</a>\n<a class=\"dropdown-item {{selectMonth6ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth6DateNumber}}\">{{monthName6}}</a>\n<div class=\"dropdown-divider\"></div>\n<a class=\"dropdown-item {{selectMonth7ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth7DateNumber}}\">{{monthName7}}</a>\n<a class=\"dropdown-item {{selectMonth8ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth8DateNumber}}\">{{monthName8}}</a>\n<a class=\"dropdown-item {{selectMonth9ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth9DateNumber}}\">{{monthName9}}</a>\n<div class=\"dropdown-divider\"></div>\n<a class=\"dropdown-item {{selectMonth10ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth10DateNumber}}\">{{monthName10}}</a>\n<a class=\"dropdown-item {{selectMonth11ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth11DateNumber}}\">{{monthName11}}</a>\n<a class=\"dropdown-item {{selectMonth12ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth12DateNumber}}\">{{monthName12}}</a>\n</div>\n</div>\n</th>\n<th style=\"width: 50px;\">\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" mds-pdtp-select-year-button {{selectYearButtonDisabledAttribute}}>{{selectedYear}}</button>\n</th>\n<th>\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextMonthText}}\" data-change-date-button=\"true\" data-number=\"{{nextMonthButtonDateNumber}}\" {{nextMonthButtonDisabledAttribute}}> &gt; </button>\n</th>\n<th>\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextYearText}}\" data-change-date-button=\"true\" data-number=\"{{nextYearButtonDateNumber}}\" {{nextYearButtonDisabledAttribute}}> &gt;&gt; </button>\n</th>\n</tr>\n</table>\n</td>\n</tr>\n</thead>\n<tbody class=\"days\">\n<tr>\n<td class=\"{{weekDayShortName1CssClass}}\">{{weekDayShortName1}}</td>\n<td>{{weekDayShortName2}}</td>\n<td>{{weekDayShortName3}}</td>\n<td>{{weekDayShortName4}}</td>\n<td>{{weekDayShortName5}}</td>\n<td>{{weekDayShortName6}}</td>\n<td class=\"{{weekDayShortName7CssClass}}\">{{weekDayShortName7}}</td>\n</tr>\n{{daysHtml}}\n</tbody>\n</table>\n</td>`;\n\n  private static previousYearTextPersian = 'سال قبل';\n  private static previousMonthTextPersian = 'ماه قبل';\n  private static previousTextPersian = 'قبلی';\n  private static nextYearTextPersian = 'سال بعد';\n  private static nextMonthTextPersian = 'ماه بعد';\n  private static nextTextPersian = 'بعدی';\n  private static todayTextPersian = 'امروز';\n  private static goTodayTextPersian = 'برو به امروز';\n  private static cancelTextPersian = 'انصراف';\n  private static currentYearTextPersian = 'سال جاری';\n  private static previousText = 'Previous';\n  private static previousYearText = 'Previous Year';\n  private static previousMonthText = 'Previous Month';\n  private static nextText = 'Next';\n  private static nextYearText = 'Next Year';\n  private static nextMonthText = 'Next Month';\n  private static todayText = 'Today';\n  private static goTodayText = 'Go Today';\n  private static cancelText = 'Cancel';\n  private static currentYearText = 'Current Year';\n  private static shortDayNamesPersian = [\n    'ش',\n    'ی',\n    'د',\n    'س',\n    'چ',\n    'پ',\n    'ج',\n  ];\n  private static shortDayNames = [\n    'Su',\n    'Mo',\n    'Tu',\n    'We',\n    'Th',\n    'Fr',\n    'Sa',\n  ];\n  private static monthNamesPersian = [\n    'فروردین',\n    'اردیبهشت',\n    'خرداد',\n    'تیر',\n    'مرداد',\n    'شهریور',\n    'مهر',\n    'آبان',\n    'آذر',\n    'دی',\n    'بهمن',\n    'اسفند'\n  ];\n  private static monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ];\n  private static weekDayNames = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ];\n  private static weekDayNamesPersian = [\n    'یک شنبه',\n    'دوشنبه',\n    'سه شنبه',\n    'چهارشنبه',\n    'پنج شنبه',\n    'جمعه',\n    'شنبه'\n  ];\n\n  // #endregion\n\n  // #region Properties\n\n  guid: string = '';\n  setting: MdsPersianDateTimePickerSetting;\n  private bsPopover: Popover | null = null;\n  private bsModal: Modal | null = null;\n  private element: Element;\n  private tempTitleString = '';\n\n  // #endregion\n\n  // #region Methods\n\n  private initializeBsPopover(setting: MdsPersianDateTimePickerSetting): void {\n\n    // Validation\n\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\n    if (setting.toDate && setting.fromDate) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\n    if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\n\n    // ---------------------\n\n    // آپشن هایی که باید همان لحظه تغییر اعمال شوند\n\n    if (setting.disabled) {\n      this.element.setAttribute(\"disabled\", '');\n    } else {\n      this.element.removeAttribute(\"disabled\");\n    }\n    if (setting.toDate || setting.fromDate) {\n      setting.rangeSelector = false;\n      this.element.setAttribute(\"data-mds-dtp-group\", setting.groupId);\n      if (setting.toDate)\n        this.element.setAttribute(\"data-to-date\", 'true');\n      else if (setting.fromDate)\n        this.element.setAttribute(\"data-from-date\", 'true');\n    }\n    if (!setting.rangeSelector) {\n      setting.rangeSelectorMonthsToShow = [0, 0];\n    }\n\n    // ---------------------\n\n    setTimeout(() => {\n      this.dispose();\n      const title = this.getPopoverHeaderTitle(setting);\n      let datePickerBodyHtml = this.getDateTimePickerBodyHtml(setting);\n      let tempDiv = document.createElement('div');\n      tempDiv.innerHTML = datePickerBodyHtml;\n      const dropDowns = tempDiv.querySelectorAll('.dropdown>button');\n      dropDowns.forEach(e => {\n        if (setting.disabled) {\n          e.setAttribute('disabled', '');\n          e.classList.add('disabled');\n        }\n        else {\n          e.removeAttribute('disabled');\n          e.classList.remove('disabled');\n        }\n      });\n      datePickerBodyHtml = tempDiv.innerHTML;\n      if (setting.modalMode == true) {\n        this.setModalHtml(title, datePickerBodyHtml, setting);\n        this.bsPopover = null;\n        setTimeout(() => {\n          const el = this.getModal();\n          if (el != null) {\n            this.bsModal = new Modal(el);\n            this.enableMainEvents();\n          }\n        }, 200);\n      } else if (setting.inLine == true) {\n        this.bsPopover = null;\n        this.element.innerHTML = datePickerBodyHtml;\n        this.enableInLineEvents();\n      } else {\n        this.bsPopover = new Popover(this.element, {\n          container: 'body',\n          content: datePickerBodyHtml,\n          title: title,\n          html: true,\n          placement: setting.placement,\n          trigger: 'manual',\n          template: MdsPersianDateTimePicker.popoverHtmlTemplate,\n          sanitize: false,\n        });\n        this.enableMainEvents();\n      }\n      MdsPersianDateTimePicker.setSelectedData(setting);\n      this.tempTitleString = title;\n    }, setting.inLine ? 10 : 100);\n  }\n  private static newGuid(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n  private static extend(...args: any[]): any {\n    for (let i = 1; i < args.length; i++)\n      for (let key in args[i])\n        if (args[i].hasOwnProperty(key))\n          args[0][key] = args[i][key];\n    return args[0];\n  }\n  private static getClonedDate(dateTime: Date): Date {\n    return new Date(dateTime.getTime());\n  }\n  private static getDateTimeJson1(dateTime: Date): GetDateTimeJson1 {\n    return {\n      year: dateTime.getFullYear(),\n      month: dateTime.getMonth() + 1,\n      day: dateTime.getDate(),\n      hour: dateTime.getHours(),\n      minute: dateTime.getMinutes(),\n      second: dateTime.getSeconds(),\n      millisecond: dateTime.getMilliseconds(),\n      dayOfWeek: dateTime.getDay()\n    };\n  }\n  private static getDateTimeJson2(dateNumber: number): GetDateTimeJson1 {\n    return {\n      year: Math.floor(dateNumber / 10000),\n      month: Math.floor(dateNumber / 100) % 100,\n      day: dateNumber % 100,\n      hour: 0,\n      minute: 0,\n      second: 0,\n      millisecond: 0,\n      dayOfWeek: -1\n    };\n  }\n  private static getDateTimeJsonPersian1(dateTime: Date): GetDateTimeJson1 {\n    let persianDate = this.toJalali(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate());\n    return {\n      year: persianDate.jy,\n      month: persianDate.jm,\n      day: persianDate.jd,\n      hour: dateTime.getHours(),\n      minute: dateTime.getMinutes(),\n      second: dateTime.getSeconds(),\n      millisecond: dateTime.getMilliseconds(),\n      dayOfWeek: dateTime.getDay(),\n    };\n  }\n  private static getDateTimeJsonPersian2(yearPersian: number, monthPersian: number, dayPersian: number, hour: number, minute: number, second: number): GetDateTimeJson1 {\n    if (!this.isNumber(hour)) hour = 0;\n    if (!this.isNumber(minute)) minute = 0;\n    if (!this.isNumber(second)) second = 0;\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second));\n  }\n  private static getWeekDayName(englishWeekDayIndex: number, isGregorian: boolean): string {\n    if (!isGregorian) return this.weekDayNamesPersian[englishWeekDayIndex];\n    return this.weekDayNames[englishWeekDayIndex];\n  }\n  private static getMonthName(monthIndex: number, isGregorian: boolean): string {\n    if (monthIndex < 0)\n      monthIndex = 11;\n    else if (monthIndex > 11)\n      monthIndex = 0;\n    if (!isGregorian) return this.monthNamesPersian[monthIndex];\n    return this.monthNames[monthIndex];\n  }\n  private static getWeekDayShortName(englishWeekDayIndex: number, isGregorian: boolean): string {\n    if (!isGregorian)\n      return this.shortDayNamesPersian[englishWeekDayIndex];\n    return this.shortDayNames[englishWeekDayIndex];\n  }\n  private static isLeapYear(persianYear: number): boolean {\n    return this.isLeapJalaliYear(persianYear);\n  }\n  private static getDaysInMonthPersian(year: number, month: number): number {\n    let numberOfDaysInMonth = 31;\n    if (month > 6 && month < 12)\n      numberOfDaysInMonth = 30;\n    else if (month == 12)\n      numberOfDaysInMonth = this.isLeapYear(year) ? 30 : 29;\n    return numberOfDaysInMonth;\n  }\n  private static getDaysInMonth(year: number, month: number): number {\n    return new Date(year, month + 1, 0).getDate();\n  }\n  private static getLastDayDateOfPreviousMonth(dateTime: Date, isGregorian: boolean): Date {\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\n    if (isGregorian) {\n      let previousMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() - 1, 1),\n        daysInMonth = MdsPersianDateTimePicker.getDaysInMonth(previousMonth.getFullYear(), previousMonth.getMonth());\n      return new Date(previousMonth.getFullYear(), previousMonth.getMonth(), daysInMonth);\n    }\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\n    dateTimeJsonPersian.month += -1;\n    if (dateTimeJsonPersian.month <= 0) {\n      dateTimeJsonPersian.month = 12;\n      dateTimeJsonPersian.year--;\n    } else if (dateTimeJsonPersian.month > 12) {\n      dateTimeJsonPersian.year++;\n      dateTimeJsonPersian.month = 1;\n    }\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeJsonPersian.year, dateTimeJsonPersian.month));\n  }\n  private static getFirstDayDateOfNextMonth(dateTime: Date, isGregorian: boolean): Date {\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\n    if (isGregorian) {\n      let nextMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() + 1, 1);\n      return new Date(nextMonth.getFullYear(), nextMonth.getMonth(), 1);\n    }\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\n    dateTimeJsonPersian.month += 1;\n    if (dateTimeJsonPersian.month <= 0) {\n      dateTimeJsonPersian.month = 12;\n      dateTimeJsonPersian.year--;\n    }\n    if (dateTimeJsonPersian.month > 12) {\n      dateTimeJsonPersian.year++;\n      dateTimeJsonPersian.month = 1;\n    }\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, 1);\n  }\n  private static getDateTime1(yearPersian: number, monthPersian: number, dayPersian: number, hour?: number, minute?: number, second?: number): Date {\n    if (!this.isNumber(hour)) hour = 0;\n    if (!this.isNumber(minute)) minute = 0;\n    if (!this.isNumber(second)) second = 0;\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second);\n  }\n  private static getDateTime2(dateTimeJsonPersian: GetDateTimeJson1): Date {\n    if (!dateTimeJsonPersian.hour) dateTimeJsonPersian.hour = 0;\n    if (!dateTimeJsonPersian.minute) dateTimeJsonPersian.minute = 0;\n    if (!dateTimeJsonPersian.second) dateTimeJsonPersian.second = 0;\n    let gregorian = this.toGregorian(dateTimeJsonPersian.year, dateTimeJsonPersian.month, dateTimeJsonPersian.day);\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, dateTimeJsonPersian.hour, dateTimeJsonPersian.minute, dateTimeJsonPersian.second);\n  }\n  private static getDateTime3(dateTimeJson: GetDateTimeJson1): Date {\n    return new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day, dateTimeJson.hour, dateTimeJson.minute, dateTimeJson.second);\n  }\n  private static getDateTime4(dateNumber: number, dateTime: Date, isGregorian: boolean): Date {\n    let dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(dateNumber);\n    if (!isGregorian) {\n      let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\n      dateTimeJsonPersian.year = dateTimeJson.year;\n      dateTimeJsonPersian.month = dateTimeJson.month;\n      dateTimeJsonPersian.day = dateTimeJson.day;\n      dateTime = this.getDateTime2(dateTimeJsonPersian);\n    } else\n      dateTime = new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day,\n        dateTime.getHours(), dateTime.getMinutes(), dateTime.getSeconds());\n    return dateTime;\n  }\n  private static getLesserDisableBeforeDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\n    // دریافت تاریخ کوچکتر\n    // از بین تاریخ های غیر فعال شده در گذشته\n    let resultDate: Date | null = null;\n    const dateNow = new Date();\n    if (setting.disableBeforeToday && setting.disableBeforeDate) {\n      if (setting.disableBeforeDate.getTime() <= dateNow.getTime())\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\n      else\n        resultDate = dateNow;\n    } else if (setting.disableBeforeDate)\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\n    else if (setting.disableBeforeToday)\n      resultDate = dateNow;\n    if (resultDate == null)\n      return null;\n    if (setting.isGregorian)\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\n  }\n  private static getBiggerDisableAfterDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\n    // دریافت تاریخ بزرگتر\n    // از بین تاریخ های غیر فعال شده در آینده\n    let resultDate: Date | null = null;\n    const dateNow = new Date();\n    if (setting.disableAfterDate && setting.disableAfterToday) {\n      if (setting.disableAfterDate.getTime() >= dateNow.getTime())\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\n      else\n        resultDate = dateNow;\n    } else if (setting.disableAfterDate)\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\n    else if (setting.disableAfterToday)\n      resultDate = dateNow;\n    if (resultDate == null)\n      return null;\n    if (setting.isGregorian)\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\n  }\n  private static addMonthToDateTimeJson(dateTimeJson: GetDateTimeJson1, addedMonth: number, isGregorian: boolean): GetDateTimeJson1 {\n    // وقتی نیاز هست تا ماه یا روز به تاریخی اضافه کنم\n    // پس از اضافه کردن ماه یا روز این متد را استفاده میکنم تا سال و ماه\n    // با مقادیر جدید تصحیح و برگشت داده شوند\n    const dateTimeJson1 = Object.assign({}, dateTimeJson);\n    dateTimeJson1.day = 1;\n    dateTimeJson1.month += addedMonth;\n    if (!isGregorian) {\n      if (dateTimeJson1.month <= 0) {\n        dateTimeJson1.month = 12;\n        dateTimeJson1.year--;\n      }\n      if (dateTimeJson1.month > 12) {\n        dateTimeJson1.year++;\n        dateTimeJson1.month = 1;\n      }\n      return dateTimeJson1;\n    }\n    return MdsPersianDateTimePicker.getDateTimeJson1(this.getDateTime3(dateTimeJson1));\n  }\n  private static convertToNumber1(dateTimeJson: GetDateTimeJson1): number {\n    return Number(MdsPersianDateTimePicker.zeroPad(dateTimeJson.year) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.month) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\n  }\n  private static convertToNumber2(year: number, month: number, day: number): number {\n    return Number(MdsPersianDateTimePicker.zeroPad(year) + MdsPersianDateTimePicker.zeroPad(month) + MdsPersianDateTimePicker.zeroPad(day));\n  }\n  private static convertToNumber3(dateTime: Date): number {\n    return MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(dateTime));\n  }\n  // private static convertToNumber4(dateTime: Date): number {\n  //   return Number(MdsPersianDateTimePicker.zeroPad(dateTime.getFullYear()) + MdsPersianDateTimePicker.zeroPad(dateTime.getMonth()) + MdsPersianDateTimePicker.zeroPad(dateTime.getDate()));\n  // }\n  private static correctOptionValue(optionName: string, value: any): any {\n    const setting = new MdsPersianDateTimePickerSetting();\n    Object.keys(setting).filter(key => key === optionName).forEach(key => {\n      switch (typeof (<any>setting)[key]) {\n        case 'number':\n          value = +value;\n          break;\n        case 'string':\n          value = value.toString();\n          break;\n        case 'boolean':\n          value = !!value;\n          break;\n        case 'object':\n          if ((<any>setting)[key] instanceof Date) {\n            value = new Date(value);\n          } else if (Array.isArray((<any>setting)[key])) {\n            switch (optionName) {\n              case 'holidays':\n              case 'disabledDates':\n              case 'specialDates':\n              case 'selectedRangeDate':\n                value.forEach((item: any, i: number) => {\n                  value[i] = new Date(item);\n                });\n                break;\n              case 'disabledDays':\n              case 'rangeSelectorMonthsToShow':\n                value.forEach((item: any, i: number) => {\n                  value[i] = +item;\n                });\n                break;\n            }\n          }\n          break;\n      }\n    });\n    return value;\n  }\n  private static getShortHour(hour: number): number {\n    let shortHour;\n    if (hour > 12)\n      shortHour = hour - 12;\n    else\n      shortHour = hour;\n    return shortHour;\n  }\n  private static getAmPm(hour: number, isGregorian: boolean): string {\n    let amPm;\n    if (hour > 12) {\n      if (isGregorian)\n        amPm = 'PM';\n      else\n        amPm = 'ب.ظ';\n    } else\n      if (isGregorian)\n        amPm = 'AM';\n      else\n        amPm = 'ق.ظ';\n    return amPm;\n  }\n  private static addMonthToDateTime(dateTime: Date, addedMonth: number, isGregorian: boolean): Date {\n    let dateTimeJson: GetDateTimeJson1;\n    if (!isGregorian) {\n      dateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\n      dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\n      return this.getDateTime2(dateTimeJson);\n    }\n    dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(dateTime);\n    dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\n    return this.getDateTime3(dateTimeJson);\n  }\n  private static isNumber(n: any): boolean {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  private static toPersianNumber(inputNumber1: number | string): string {\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\n    if (!inputNumber1) return '';\n    let str1 = inputNumber1.toString().trim();\n    if (!str1) return '';\n    str1 = str1.replace(/0/img, '۰');\n    str1 = str1.replace(/1/img, '۱');\n    str1 = str1.replace(/2/img, '۲');\n    str1 = str1.replace(/3/img, '۳');\n    str1 = str1.replace(/4/img, '۴');\n    str1 = str1.replace(/5/img, '۵');\n    str1 = str1.replace(/6/img, '۶');\n    str1 = str1.replace(/7/img, '۷');\n    str1 = str1.replace(/8/img, '۸');\n    str1 = str1.replace(/9/img, '۹');\n    return str1;\n  }\n  private static toEnglishNumber(inputNumber1: number | string): string {\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\n    if (!inputNumber1) return '';\n    let str1 = inputNumber1.toString().trim();\n    if (!str1) return '';\n    str1 = str1.replace(/۰/img, '0');\n    str1 = str1.replace(/۱/img, '1');\n    str1 = str1.replace(/۲/img, '2');\n    str1 = str1.replace(/۳/img, '3');\n    str1 = str1.replace(/۴/img, '4');\n    str1 = str1.replace(/۵/img, '5');\n    str1 = str1.replace(/۶/img, '6');\n    str1 = str1.replace(/۷/img, '7');\n    str1 = str1.replace(/۸/img, '8');\n    str1 = str1.replace(/۹/img, '9');\n    return str1;\n  }\n  private static zeroPad(nr: any, base?: string): string {\n    if (nr == undefined || nr == '') return '00';\n    if (base == undefined || base == '') base = '00';\n    let len = (String(base).length - String(nr).length) + 1;\n    return len > 0 ? new Array(len).join('0') + nr : nr;\n  }\n  private static getDateTimeString(dateTimeJson: GetDateTimeJson1, format: string, isGregorian: boolean, persianNumber: boolean): string {\n\n    /// فرمت های که پشتیبانی می شوند\n    /// <para />\n    /// yyyy: سال چهار رقمی\n    /// <para />\n    /// yy: سال دو رقمی\n    /// <para />\n    /// MMMM: نام ماه\n    /// <para />\n    /// MM: عدد دو رقمی ماه\n    /// <para />\n    /// M: عدد یک رقمی ماه\n    /// <para />\n    /// dddd: نام روز هفته\n    /// <para />\n    /// dd: عدد دو رقمی روز ماه\n    /// <para />\n    /// d: عدد یک رقمی روز ماه\n    /// <para />\n    /// HH: ساعت دو رقمی با فرمت 00 تا 24\n    /// <para />\n    /// H: ساعت یک رقمی با فرمت 0 تا 24\n    /// <para />\n    /// hh: ساعت دو رقمی با فرمت 00 تا 12\n    /// <para />\n    /// h: ساعت یک رقمی با فرمت 0 تا 12\n    /// <para />\n    /// mm: عدد دو رقمی دقیقه\n    /// <para />\n    /// m: عدد یک رقمی دقیقه\n    /// <para />\n    /// ss: ثانیه دو رقمی\n    /// <para />\n    /// s: ثانیه یک رقمی\n    /// <para />\n    /// fff: میلی ثانیه 3 رقمی\n    /// <para />\n    /// ff: میلی ثانیه 2 رقمی\n    /// <para />\n    /// f: میلی ثانیه یک رقمی\n    /// <para />\n    /// tt: ب.ظ یا ق.ظ\n    /// <para />\n    /// t: حرف اول از ب.ظ یا ق.ظ\n\n    format = format.replace(/yyyy/mg, dateTimeJson.year.toString());\n    format = format.replace(/yy/mg, (dateTimeJson.year % 100).toString());\n    format = format.replace(/MMMM/mg, MdsPersianDateTimePicker.getMonthName(dateTimeJson.month - 1, isGregorian));\n    format = format.replace(/MM/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.month));\n    format = format.replace(/M/mg, dateTimeJson.month.toString());\n    format = format.replace(/dddd/mg, MdsPersianDateTimePicker.getWeekDayName(dateTimeJson.dayOfWeek, isGregorian));\n    format = format.replace(/dd/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\n    format = format.replace(/d/mg, dateTimeJson.day.toString());\n    format = format.replace(/HH/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\n    format = format.replace(/H/mg, dateTimeJson.hour.toString());\n    format = format.replace(/hh/mg, MdsPersianDateTimePicker.zeroPad(this.getShortHour(dateTimeJson.hour).toString()));\n    format = format.replace(/h/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\n    format = format.replace(/mm/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.minute));\n    format = format.replace(/m/mg, dateTimeJson.minute.toString());\n    format = format.replace(/ss/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.second));\n    format = format.replace(/s/mg, dateTimeJson.second.toString());\n    format = format.replace(/fff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond, '000'));\n    format = format.replace(/ff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond / 10));\n    format = format.replace(/f/mg, (dateTimeJson.millisecond / 100).toString());\n    format = format.replace(/tt/mg, this.getAmPm(dateTimeJson.hour, isGregorian));\n    format = format.replace(/t/mg, this.getAmPm(dateTimeJson.hour, isGregorian)[0]);\n\n    if (persianNumber)\n      format = MdsPersianDateTimePicker.toPersianNumber(format);\n    return format;\n  }\n  private static getSelectedDateTimeTextFormatted(setting: MdsPersianDateTimePickerSetting): string {\n    if (setting.selectedDate == undefined) return '';\n    if (!setting.enableTimePicker) {\n      setting.selectedDate.setHours(0);\n      setting.selectedDate.setMinutes(0);\n      setting.selectedDate.setSeconds(0);\n    }\n    if (setting.rangeSelector && setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)\n      return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorStartDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate), setting.textFormat, setting.isGregorian, setting.persianNumber) + ' - ' +\n        MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorEndDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\n    return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\n  }\n  private static getSelectedDateFormatted(setting: MdsPersianDateTimePickerSetting): string {\n    // دریافت رشته تاریخ انتخاب شده\n    if ((!setting.rangeSelector && !setting.selectedDate) ||\n      (setting.rangeSelector && !setting.rangeSelectorStartDate && !setting.rangeSelectorEndDate))\n      return '';\n    if (setting.rangeSelector)\n      return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate!), setting.dateFormat, true, setting.persianNumber) + ' - ' +\n        MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate!), setting.dateFormat, true, setting.persianNumber);\n    return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate!), setting.dateFormat, true, setting.persianNumber);\n  }\n  private static getDisabledDateObject(setting: MdsPersianDateTimePickerSetting): [GetDateTimeJson1 | null, GetDateTimeJson1 | null] {\n    let disableBeforeDateTimeJson = this.getLesserDisableBeforeDate(setting);\n    let disableAfterDateTimeJson = this.getBiggerDisableAfterDate(setting);\n    // بررسی پراپرتی های از تاریخ، تا تاریخ\n    if ((setting.fromDate || setting.toDate) && setting.groupId) {\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\n      if (toDateElement != null && setting.fromDate) {\n        const toDateSetting = MdsPersianDateTimePicker.getInstance(toDateElement)?.setting;\n        const toDateSelectedDate = !toDateSetting ? null : toDateSetting.selectedDate;\n        disableAfterDateTimeJson = !toDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(toDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(toDateSelectedDate);\n      } else if (fromDateElement != null && setting.toDate) {\n        const fromDateSetting = MdsPersianDateTimePicker.getInstance(fromDateElement)?.setting;\n        const fromDateSelectedDate = !fromDateSetting ? null : fromDateSetting.selectedDate;\n        disableBeforeDateTimeJson = !fromDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(fromDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(fromDateSelectedDate);\n      }\n    }\n    return [disableBeforeDateTimeJson, disableAfterDateTimeJson];\n  }\n  private static setSelectedData(setting: MdsPersianDateTimePickerSetting): void {\n    const targetTextElement = setting.targetTextSelector ? document.querySelector(setting.targetTextSelector) : undefined;\n    const targetDateElement = setting.targetDateSelector ? document.querySelector(setting.targetDateSelector) : undefined;\n    const changeEvent = new Event('change');\n    if (targetTextElement != undefined) {\n      const dateTimeTextFormat = this.getSelectedDateTimeTextFormatted(setting);\n      switch (targetTextElement.tagName.toLowerCase()) {\n        case 'input':\n          (<any>targetTextElement).value = dateTimeTextFormat;\n          break;\n        default:\n          targetTextElement.innerHTML = dateTimeTextFormat;\n          break;\n      }\n      targetTextElement.dispatchEvent(changeEvent);\n    }\n    if (targetDateElement != undefined) {\n      const dateTimeFormat = this.toEnglishNumber(this.getSelectedDateFormatted(setting));\n      switch (targetDateElement.tagName.toLowerCase()) {\n        case 'input':\n          (<any>targetDateElement).value = dateTimeFormat;\n          break;\n        default:\n          targetDateElement.innerHTML = dateTimeFormat;\n          break;\n      }\n      targetDateElement.dispatchEvent(changeEvent);\n    }\n  }\n  private getPopover(element: Element): Element | null {\n    let popoverId = element.getAttribute('aria-describedby');\n    if (popoverId == undefined || popoverId == '')\n      return element.closest('[data-mds-dtp]');\n    return document.getElementById(popoverId.toString());\n  }\n  private getModal(): Element | null {\n    return document.querySelector(`.modal[data-mds-dtp-guid=\"${this.guid}\"]`);\n  }\n  private setModalHtml(title: string, datePickerBodyHtml: string, setting: MdsPersianDateTimePickerSetting): void {\n    const prevModalElement = this.getModal();\n    if (prevModalElement == null) {\n      let modalHtml = MdsPersianDateTimePicker.modalHtmlTemplate;\n      modalHtml = modalHtml.replace(/\\{\\{guid\\}\\}/img, this.guid);\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = modalHtml;\n      tempDiv.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\n      tempDiv.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\n      document.querySelector('body')!.appendChild(tempDiv);\n    } else {\n      prevModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\n      prevModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\n    }\n    const modalDialogElement = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"] .modal-dialog`);\n    if (modalDialogElement != null) {\n      if (setting.rangeSelector) {\n        if (setting.rangeSelectorMonthsToShow[0] > 0 || setting.rangeSelectorMonthsToShow[1] > 0)\n          modalDialogElement.classList.add('modal-xl');\n        else\n          modalDialogElement.classList.remove('modal-xl');\n      } else {\n        modalDialogElement.classList.remove('modal-xl');\n      }\n    } else {\n      console.warn(\"mds.bs.datetimepicker: element with `data-mds-dtp-guid` selector not found !\")\n    }\n  }\n  private getYearsBoxBodyHtml(setting: MdsPersianDateTimePickerSetting, yearToStart: number): MdsPersianDateTimePickerYearToSelect {\n    // بدست آوردن اچ تی ام ال انتخاب سال\n    // yearToStart سال شروع\n\n    setting.yearOffset = Number(setting.yearOffset);\n\n    const selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\n    const disableBeforeDateTimeJson = disabledDateObj[0];\n    const disableAfterDateTimeJson = disabledDateObj[1];\n    let html = MdsPersianDateTimePicker.dateTimePickerYearsToSelectHtmlTemplate;\n    let yearsBoxHtml = '';\n    let todayDateTimeJson: GetDateTimeJson1;\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\n    let counter = 1;\n\n    if (setting.isGregorian) {\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\n    } else {\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\n    }\n    counter = 1;\n    const yearStart = yearToStart ? yearToStart : todayDateTimeJson.year - setting.yearOffset;\n    const yearEnd = yearToStart ? yearToStart + setting.yearOffset * 2 : todayDateTimeJson.year + setting.yearOffset;\n    for (let i = yearStart; i < yearEnd; i++) {\n      let disabledAttr = '';\n      if (disableBeforeDateTimeJson != null) {\n        disabledAttr = i < disableBeforeDateTimeJson.year ? 'disabled' : '';\n      }\n      if (!disabledAttr && disableAfterDateTimeJson != null) {\n        disabledAttr = i > disableAfterDateTimeJson.year ? 'disabled' : '';\n      }\n      let currentYearDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, MdsPersianDateTimePicker.getDaysInMonthPersian(i, selectedDateTimeToShowJson.month)));\n      let currentYearDisabledAttr = '';\n      let yearText = setting.isGregorian ? i.toString() : MdsPersianDateTimePicker.toPersianNumber(i);\n      let yearDateNumber = MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, 1);\n      let todayAttr = todayDateTimeJson.year == i ? 'data-current-year=\"true\"' : ''\n      let selectedYearAttr = selectedDateTimeToShowJson.year == i ? 'data-selected-year' : ''\n      let selectedYearTitle = '';\n      if (todayAttr)\n        selectedYearTitle = setting.isGregorian ? MdsPersianDateTimePicker.currentYearText : MdsPersianDateTimePicker.currentYearTextPersian;\n      if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year != undefined && currentYearDateTimeJson.year < disableBeforeDateTimeJson.year)\n        currentYearDisabledAttr = 'disabled';\n      if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year != undefined && currentYearDateTimeJson.year > disableAfterDateTimeJson.year)\n        currentYearDisabledAttr = 'disabled';\n      if (setting.disableBeforeToday && currentYearDateTimeJson.year < todayDateTimeJson.year)\n        currentYearDisabledAttr = 'disabled';\n      if (setting.disableAfterToday && currentYearDateTimeJson.year > todayDateTimeJson.year)\n        currentYearDisabledAttr = 'disabled';\n      if (counter == 1) yearsBoxHtml += '<tr>';\n      yearsBoxHtml += `\n<td class=\"text-center\" title=\"${selectedYearTitle}\" ${todayAttr} ${selectedYearAttr}>\n  <button class=\"btn btn-sm btn-light w-100\" type=\"button\" data-change-date-button=\"true\" data-number=\"${yearDateNumber}\" ${currentYearDisabledAttr} ${disabledAttr}>${yearText}</button>\n</td>\n`;\n      if (counter == 5) yearsBoxHtml += '</tr>';\n      counter++;\n      if (counter > 5) counter = 1;\n    }\n    html = html.replace(/\\{\\{yearsBoxHtml\\}\\}/img, yearsBoxHtml);\n    html = html.replace(/\\{\\{cancelText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.cancelText : MdsPersianDateTimePicker.cancelTextPersian);\n    if (setting.inLine && setting.yearOffset > 15)\n      html += '<div style=\"height: 30px;\"></div>';\n    return {\n      yearStart,\n      yearEnd,\n      html\n    };\n  }\n  private getYearsBoxHeaderHtml(setting: MdsPersianDateTimePickerSetting, yearStart: number, yearEnd: number): string {\n    const yearsRangeText = ` ${yearStart} - ${yearEnd - 1} `;\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\n    let html = MdsPersianDateTimePicker.popoverHeaderSelectYearHtmlTemplate;\n    html = html.replace(/\\{{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\n    html = html.replace(/\\{{dirAttrValue\\}\\}/img, setting.isGregorian ? 'ltr' : 'rtl');\n    html = html.replace(/\\{\\{yearsRangeText\\}\\}/img, setting.isGregorian ? yearsRangeText : MdsPersianDateTimePicker.toPersianNumber(yearsRangeText));\n    html = html.replace(/\\{\\{previousText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousText : MdsPersianDateTimePicker.previousTextPersian);\n    html = html.replace(/\\{\\{nextText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextText : MdsPersianDateTimePicker.nextTextPersian);\n    html = html.replace(/\\{\\{latestPreviousYear\\}\\}/img, yearStart > yearEnd ? yearEnd.toString() : yearStart.toString());\n    html = html.replace(/\\{\\{latestNextYear\\}\\}/img, yearStart > yearEnd ? yearStart.toString() : yearEnd.toString());\n    html = html.replace(/\\{\\{prevYearButtonAttr\\}\\}/img, disabledDateObj[0] != null && yearStart - 1 < disabledDateObj[0].year ? 'disabled' : '');\n    html = html.replace(/\\{\\{nextYearButtonAttr\\}\\}/img, disabledDateObj[1] != null && yearEnd + 1 > disabledDateObj[1].year ? 'disabled' : '');\n    return html;\n  }\n  private getDateTimePickerMonthHtml(setting: MdsPersianDateTimePickerSetting, isNextMonth: boolean, isPrevMonth: boolean): string {\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\n    let selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    let selectedDateTime = setting.selectedDate != undefined ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : undefined;\n    let isNextOrPrevMonth = isNextMonth || isPrevMonth;\n    let html = MdsPersianDateTimePicker.dateTimePickerMonthTableHtmlTemplate;\n\n    html = html.replace(/\\{\\{guid\\}\\}/img, this.guid);\n    html = html.replace(/\\{\\{monthTdAttribute\\}\\}/img, isNextMonth ? 'data-next-month' : isPrevMonth ? 'data-prev-month' : '');\n    html = html.replace(/\\{\\{monthNameAttribute\\}\\}/img, !isNextOrPrevMonth ? 'hidden' : '');\n    html = html.replace(/\\{\\{theadSelectDateButtonTrAttribute\\}\\}/img, !isNextOrPrevMonth ? '' : 'hidden');\n    html = html.replace(/\\{\\{weekDayShortName1CssClass\\}\\}/img, setting.isGregorian ? 'text-danger' : '');\n    html = html.replace(/\\{\\{weekDayShortName7CssClass\\}\\}/img, !setting.isGregorian ? 'text-danger' : '');\n    html = html.replace(/\\{\\{previousYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousYearText : MdsPersianDateTimePicker.previousYearTextPersian);\n    html = html.replace(/\\{\\{previousMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousMonthText : MdsPersianDateTimePicker.previousMonthTextPersian);\n    html = html.replace(/\\{\\{nextMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextMonthText : MdsPersianDateTimePicker.nextMonthTextPersian);\n    html = html.replace(/\\{\\{nextYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextYearText : MdsPersianDateTimePicker.nextYearTextPersian);\n    html = html.replace(/\\{\\{monthName1\\}\\}/img, MdsPersianDateTimePicker.getMonthName(0, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName2\\}\\}/img, MdsPersianDateTimePicker.getMonthName(1, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName3\\}\\}/img, MdsPersianDateTimePicker.getMonthName(2, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName4\\}\\}/img, MdsPersianDateTimePicker.getMonthName(3, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName5\\}\\}/img, MdsPersianDateTimePicker.getMonthName(4, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName6\\}\\}/img, MdsPersianDateTimePicker.getMonthName(5, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName7\\}\\}/img, MdsPersianDateTimePicker.getMonthName(6, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName8\\}\\}/img, MdsPersianDateTimePicker.getMonthName(7, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName9\\}\\}/img, MdsPersianDateTimePicker.getMonthName(8, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName10\\}\\}/img, MdsPersianDateTimePicker.getMonthName(9, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName11\\}\\}/img, MdsPersianDateTimePicker.getMonthName(10, setting.isGregorian));\n    html = html.replace(/\\{\\{monthName12\\}\\}/img, MdsPersianDateTimePicker.getMonthName(11, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName1\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(0, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName2\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(1, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName3\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(2, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName4\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(3, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName5\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(4, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName6\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(5, setting.isGregorian));\n    html = html.replace(/\\{\\{weekDayShortName7\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(6, setting.isGregorian));\n\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\n    let i = 0,\n      j = 0,\n      firstWeekDayNumber,\n      cellNumber = 0,\n      tdNumber = 0,\n      selectedDateNumber = 0,\n      selectedMonthName = '',\n      todayDateTimeJson: GetDateTimeJson1, // year, month, day, hour, minute, second\n      dateTimeToShowJson: GetDateTimeJson1, // year, month, day, hour, minute, second\n      numberOfDaysInCurrentMonth = 0,\n      numberOfDaysInPreviousMonth = 0,\n      tr = document.createElement('TR'),\n      td = document.createElement(\"TD\"),\n      daysHtml = '',\n      currentDateNumber = 0,\n      previousMonthDateNumber = 0,\n      nextMonthDateNumber = 0,\n      previousYearDateNumber = 0,\n      nextYearDateNumber = 0,\n      rangeSelectorStartDate = !setting.rangeSelector || setting.rangeSelectorStartDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate),\n      rangeSelectorEndDate = !setting.rangeSelector || setting.rangeSelectorEndDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate),\n      rangeSelectorStartDateNumber = 0,\n      rangeSelectorEndDateNumber = 0,\n      dayNumberInString = '0',\n      dayOfWeek = '', // نام روز هفته\n      monthsDateNumberAndAttr: any = {\n        month1DateNumber: 0,\n        month2DateNumber: 0,\n        month3DateNumber: 0,\n        month4DateNumber: 0,\n        month5DateNumber: 0,\n        month6DateNumber: 0,\n        month7DateNumber: 0,\n        month8DateNumber: 0,\n        month9DateNumber: 0,\n        month10DateNumber: 0,\n        month11DateNumber: 0,\n        month12DateNumber: 0,\n        selectMonth1ButtonCssClass: '',\n        selectMonth2ButtonCssClass: '',\n        selectMonth3ButtonCssClass: '',\n        selectMonth4ButtonCssClass: '',\n        selectMonth5ButtonCssClass: '',\n        selectMonth6ButtonCssClass: '',\n        selectMonth7ButtonCssClass: '',\n        selectMonth8ButtonCssClass: '',\n        selectMonth9ButtonCssClass: '',\n        selectMonth10ButtonCssClass: '',\n        selectMonth11ButtonCssClass: '',\n        selectMonth12ButtonCssClass: '',\n      },\n      holidaysDateNumbers: number[] = [],\n      disabledDatesNumber: number[] = [],\n      specialDatesNumber: number[] = [],\n      disableBeforeDateTimeJson = disabledDateObj[0],\n      disableAfterDateTimeJson = disabledDateObj[1],\n      previousYearButtonDisabledAttribute = '',\n      previousMonthButtonDisabledAttribute = '',\n      selectYearButtonDisabledAttribute = '',\n      nextMonthButtonDisabledAttribute = '',\n      nextYearButtonDisabledAttribute = '',\n      isTrAppended = false;\n\n    if (setting.isGregorian) {\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShowTemp);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\n      firstWeekDayNumber = new Date(dateTimeToShowJson.year, dateTimeToShowJson.month - 1, 1).getDay();\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(selectedDateTime));\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 1);\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 2);\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, true)));\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, true)));\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() - 1))));\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() + 1))));\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\n      for (i = 1; i <= 12; i++) {\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setMonth(i - 1))));\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      }\n      for (i = 0; i < setting.holidays.length; i++) {\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.holidays[i])));\n      }\n      for (i = 0; i < setting.disabledDates.length; i++) {\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.disabledDates[i])));\n      }\n      for (i = 0; i < setting.specialDates.length; i++) {\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.specialDates[i])));\n      }\n    } else {\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShowTemp);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\n      firstWeekDayNumber = MdsPersianDateTimePicker.getDateTimeJsonPersian2(dateTimeToShowJson.year, dateTimeToShowJson.month, 1, 0, 0, 0).dayOfWeek;\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateTime));\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, dateTimeToShowJson.month);\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year - 1, dateTimeToShowJson.month - 1);\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, false)));\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, false)));\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year - 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year + 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\n      for (i = 1; i <= 12; i++) {\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, i, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, i));\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      }\n      for (i = 0; i < setting.holidays.length; i++) {\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.holidays[i])));\n      }\n      for (i = 0; i < setting.disabledDates.length; i++) {\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.disabledDates[i])));\n      }\n      for (i = 0; i < setting.specialDates.length; i++) {\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.specialDates[i])));\n      }\n    }\n\n    let todayDateNumber = MdsPersianDateTimePicker.convertToNumber1(todayDateTimeJson);\n    let selectedYear = setting.isGregorian ? dateTimeToShowJson.year.toString() : MdsPersianDateTimePicker.toPersianNumber(dateTimeToShowJson.year);\n    let disableBeforeDateTimeNumber = !disableBeforeDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableBeforeDateTimeJson);\n    let disableAfterDateTimeNumber = !disableAfterDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableAfterDateTimeJson);\n    let currentMonthInfo = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian) + ' ' + dateTimeToShowJson.year.toString();\n    if (!setting.isGregorian)\n      currentMonthInfo = MdsPersianDateTimePicker.toPersianNumber(currentMonthInfo);\n    selectedMonthName = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian);\n\n    if (setting.yearOffset <= 0) {\n      previousYearButtonDisabledAttribute = 'disabled';\n      nextYearButtonDisabledAttribute = 'disabled';\n      selectYearButtonDisabledAttribute = 'disabled';\n    }\n\n    // روز های ماه قبل\n    if (!setting.isGregorian && firstWeekDayNumber != 6 || setting.isGregorian && firstWeekDayNumber != 0) {\n      if (setting.isGregorian)\n        firstWeekDayNumber--;\n      let previousMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, -1, setting.isGregorian);\n      for (i = numberOfDaysInPreviousMonth - firstWeekDayNumber; i <= numberOfDaysInPreviousMonth; i++) {\n        currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(previousMonthDateTimeJson.year, previousMonthDateTimeJson.month, i);\n        dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\n        td = document.createElement('TD');\n        td.setAttribute('data-nm', '');\n        td.setAttribute('data-number', currentDateNumber.toString());\n        td.innerHTML = dayNumberInString;\n        if (setting.rangeSelector) {\n          if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\n            td.classList.add('selected-range-days-start-end');\n          else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\n            td.classList.add('selected-range-days-nm');\n        }\n        // روز جمعه\n        if (!setting.isGregorian && tdNumber == 6)\n          td.classList.add('text-danger');\n        // روز یکشنبه\n        else if (setting.isGregorian && tdNumber == 0)\n          td.classList.add('text-danger');\n        tr.appendChild(td);\n        cellNumber++;\n        tdNumber++;\n        if (tdNumber >= 7) {\n          tdNumber = 0;\n          daysHtml += tr.outerHTML;\n          isTrAppended = true;\n          tr = document.createElement('TR');\n        }\n      }\n    }\n\n    // روزهای ماه جاری\n    for (i = 1; i <= numberOfDaysInCurrentMonth; i++) {\n\n      if (tdNumber >= 7) {\n        tdNumber = 0;\n        daysHtml += tr.outerHTML;\n        isTrAppended = true;\n        tr = document.createElement('TR');\n      }\n\n      // عدد روز\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, dateTimeToShowJson.month, i);\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\n\n      td = document.createElement('TD');\n      td.setAttribute('data-day', '');\n      td.setAttribute('data-number', currentDateNumber.toString());\n      td.innerHTML = dayNumberInString;\n\n      // امروز\n      if (currentDateNumber == todayDateNumber) {\n        td.setAttribute('data-today', '');\n        td.setAttribute('title', setting.isGregorian ? MdsPersianDateTimePicker.todayText : MdsPersianDateTimePicker.todayTextPersian);\n        // اگر نام روز هفته انتخاب شده در تکس باکس قبل از تاریخ امروز باشد\n        // نباید دیگر نام روز هفته تغییر کند\n        if (!dayOfWeek)\n          dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\n      }\n\n      // روز از قبل انتخاب شده\n      if (!setting.rangeSelector && selectedDateNumber == currentDateNumber) {\n        td.setAttribute('data-mds-dtp-selected-day', '');\n        dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\n      }\n\n      // روزهای تعطیل\n      for (j = 0; j < holidaysDateNumbers.length; j++) {\n        if (holidaysDateNumbers[j] != currentDateNumber) continue;\n        td.classList.add('text-danger');\n        break;\n      }\n\n      // روز جمعه شمسی\n      if (!setting.isGregorian && tdNumber == 6) {\n        td.classList.add('text-danger');\n      }\n      // روز یکشنبه میلادی\n      else if (setting.isGregorian && tdNumber == 0) {\n        td.classList.add('text-danger');\n      }\n\n      // روزهای غیر فعال شده\n      if (setting.disableBeforeToday) {\n        if (currentDateNumber < todayDateNumber) td.setAttribute('disabled', '');\n        if (nextMonthDateNumber < todayDateNumber)\n          nextMonthButtonDisabledAttribute = 'disabled';\n        if (nextYearDateNumber < todayDateNumber)\n          nextYearButtonDisabledAttribute = 'disabled';\n        if (previousMonthDateNumber < todayDateNumber)\n          previousMonthButtonDisabledAttribute = 'disabled';\n        if (previousYearDateNumber < todayDateNumber)\n          previousYearButtonDisabledAttribute = 'disabled';\n        for (j = 1; j <= 12; j++) {\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < todayDateNumber)\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\n        }\n      }\n      if (setting.disableAfterToday) {\n        if (currentDateNumber > todayDateNumber) td.setAttribute('disabled', '');\n        if (nextMonthDateNumber > todayDateNumber)\n          nextMonthButtonDisabledAttribute = 'disabled';\n        if (nextYearDateNumber > todayDateNumber)\n          nextYearButtonDisabledAttribute = 'disabled';\n        if (previousMonthDateNumber > todayDateNumber)\n          previousMonthButtonDisabledAttribute = 'disabled';\n        if (previousYearDateNumber > todayDateNumber)\n          previousYearButtonDisabledAttribute = 'disabled';\n        for (j = 1; j <= 12; j++) {\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > todayDateNumber)\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\n        }\n      }\n      if (disableAfterDateTimeNumber) {\n        if (currentDateNumber > disableAfterDateTimeNumber) td.setAttribute('disabled', '');\n        if (nextMonthDateNumber > disableAfterDateTimeNumber)\n          nextMonthButtonDisabledAttribute = 'disabled';\n        if (nextYearDateNumber > disableAfterDateTimeNumber)\n          nextYearButtonDisabledAttribute = 'disabled';\n        if (previousMonthDateNumber > disableAfterDateTimeNumber)\n          previousMonthButtonDisabledAttribute = 'disabled';\n        if (previousYearDateNumber > disableAfterDateTimeNumber)\n          previousYearButtonDisabledAttribute = 'disabled';\n        for (j = 1; j <= 12; j++) {\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > disableAfterDateTimeNumber)\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\n        }\n      }\n      if (disableBeforeDateTimeNumber) {\n        if (currentDateNumber < disableBeforeDateTimeNumber) td.setAttribute('disabled', '');\n        if (nextMonthDateNumber < disableBeforeDateTimeNumber)\n          nextMonthButtonDisabledAttribute = 'disabled';\n        if (nextYearDateNumber < disableBeforeDateTimeNumber)\n          nextYearButtonDisabledAttribute = 'disabled';\n        if (previousMonthDateNumber < disableBeforeDateTimeNumber)\n          previousMonthButtonDisabledAttribute = 'disabled';\n        if (previousYearDateNumber < disableBeforeDateTimeNumber)\n          previousYearButtonDisabledAttribute = 'disabled';\n        for (j = 1; j <= 12; j++) {\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < disableBeforeDateTimeNumber)\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\n        }\n      }\n      for (j = 0; j < disabledDatesNumber.length; j++) {\n        if (currentDateNumber == disabledDatesNumber[j])\n          td.setAttribute('disabled', '');\n      }\n      for (j = 0; j < specialDatesNumber.length; j++) {\n        if (currentDateNumber == specialDatesNumber[j])\n          td.setAttribute('data-special-date', '');\n      }\n      if (setting.disabledDays != null && setting.disabledDays.length > 0 && setting.disabledDays.indexOf(tdNumber) >= 0) {\n        td.setAttribute('disabled', '');\n      }\n      // \\\\\n\n      if (setting.rangeSelector) {\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\n          td.classList.add('selected-range-days-start-end');\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\n          td.classList.add('selected-range-days');\n      }\n\n      tr.appendChild(td);\n      isTrAppended = false;\n\n      tdNumber++;\n      cellNumber++;\n    }\n\n    if (tdNumber >= 7) {\n      tdNumber = 0;\n      daysHtml += tr.outerHTML;\n      isTrAppended = true;\n      tr = document.createElement('TR');\n    }\n\n    // روزهای ماه بعد\n    let nextMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, 1, setting.isGregorian);\n    for (i = 1; i <= 42 - cellNumber; i++) {\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(nextMonthDateTimeJson.year, nextMonthDateTimeJson.month, i);\n      td = document.createElement('TD');\n      td.setAttribute('data-nm', '');\n      td.setAttribute('data-number', currentDateNumber.toString());\n      td.innerHTML = dayNumberInString;\n      if (setting.rangeSelector) {\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\n          td.classList.add('selected-range-days-start-end');\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\n          td.classList.add('selected-range-days-nm');\n      }\n      // روز جمعه\n      if (!setting.isGregorian && tdNumber == 6)\n        td.classList.add('text-danger');\n      // روز یکشنبه\n      else if (setting.isGregorian && tdNumber == 0)\n        td.classList.add('text-danger');\n      tr.appendChild(td);\n      tdNumber++;\n      if (tdNumber >= 7) {\n        tdNumber = 0;\n        daysHtml += tr.outerHTML;\n        isTrAppended = true;\n        tr = document.createElement('TR');\n      }\n    }\n\n    if (!isTrAppended) {\n      daysHtml += tr.outerHTML;\n      isTrAppended = true;\n    }\n\n    html = html.replace(/\\{\\{currentMonthInfo\\}\\}/img, currentMonthInfo);\n    html = html.replace(/\\{\\{selectedYear\\}\\}/img, selectedYear);\n    html = html.replace(/\\{\\{selectedMonthName\\}\\}/img, selectedMonthName);\n    html = html.replace(/\\{\\{daysHtml\\}\\}/img, daysHtml);\n    html = html.replace(/\\{\\{previousYearButtonDisabledAttribute\\}\\}/img, previousYearButtonDisabledAttribute);\n    html = html.replace(/\\{\\{previousYearButtonDateNumber\\}\\}/img, previousYearDateNumber.toString());\n    html = html.replace(/\\{\\{previousMonthButtonDisabledAttribute\\}\\}/img, previousMonthButtonDisabledAttribute);\n    html = html.replace(/\\{\\{previousMonthButtonDateNumber\\}\\}/img, previousMonthDateNumber.toString());\n    html = html.replace(/\\{\\{selectYearButtonDisabledAttribute\\}\\}/img, selectYearButtonDisabledAttribute);\n    html = html.replace(/\\{\\{nextMonthButtonDisabledAttribute\\}\\}/img, nextMonthButtonDisabledAttribute);\n    html = html.replace(/\\{\\{nextMonthButtonDateNumber\\}\\}/img, nextMonthDateNumber.toString());\n    html = html.replace(/\\{\\{nextYearButtonDisabledAttribute\\}\\}/img, nextYearButtonDisabledAttribute);\n    html = html.replace(/\\{\\{nextYearButtonDateNumber\\}\\}/img, nextYearDateNumber.toString());\n    html = html.replace(/\\{\\{dropDownMenuMonth1DateNumber\\}\\}/img, monthsDateNumberAndAttr.month1DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth2DateNumber\\}\\}/img, monthsDateNumberAndAttr.month2DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth3DateNumber\\}\\}/img, monthsDateNumberAndAttr.month3DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth4DateNumber\\}\\}/img, monthsDateNumberAndAttr.month4DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth5DateNumber\\}\\}/img, monthsDateNumberAndAttr.month5DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth6DateNumber\\}\\}/img, monthsDateNumberAndAttr.month6DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth7DateNumber\\}\\}/img, monthsDateNumberAndAttr.month7DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth8DateNumber\\}\\}/img, monthsDateNumberAndAttr.month8DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth9DateNumber\\}\\}/img, monthsDateNumberAndAttr.month9DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth10DateNumber\\}\\}/img, monthsDateNumberAndAttr.month10DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth11DateNumber\\}\\}/img, monthsDateNumberAndAttr.month11DateNumber);\n    html = html.replace(/\\{\\{dropDownMenuMonth12DateNumber\\}\\}/img, monthsDateNumberAndAttr.month12DateNumber);\n    html = html.replace(/\\{\\{selectMonth1ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth1ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth2ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth2ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth3ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth3ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth4ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth4ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth5ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth5ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth6ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth6ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth7ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth7ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth8ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth8ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth9ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth9ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth10ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth10ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth11ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth11ButtonCssClass);\n    html = html.replace(/\\{\\{selectMonth12ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth12ButtonCssClass);\n\n    return html;\n  }\n  private hideYearsBox = (element: Element, setting: MdsPersianDateTimePickerSetting): void => {\n    if (setting.inLine) {\n      const dtpInLine = element.closest('[data-mds-dtp-guid]');\n      if (dtpInLine == null) return;\n      const dtpInlineHeaderElement = dtpInLine.querySelector('[mds-dtp-inline-header]');\n      if (this.tempTitleString && dtpInlineHeaderElement != null)\n        dtpInlineHeaderElement.innerHTML = this.tempTitleString;\n      const yearListBoxElement = dtpInLine.querySelector('[data-mds-dtp-year-list-box]');\n      if (yearListBoxElement != null) {\n        yearListBoxElement.classList.add('w-0');\n        yearListBoxElement.innerHTML = '';\n      }\n      const inlineYearsContainerElement = dtpInLine.querySelector('[data-name=\"dtp-years-container\"]');\n      if (inlineYearsContainerElement != null) {\n        inlineYearsContainerElement.classList.add('w-0');\n        inlineYearsContainerElement.innerHTML = '';\n      }\n      dtpInLine.classList.remove('overflow-hidden');\n    } else {\n      const popoverOrModalElement = setting.modalMode ? this.getModal() : this.getPopover(element);\n      if (popoverOrModalElement == null) return;\n      if (this.tempTitleString) {\n        if (setting.modalMode)\n          popoverOrModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = this.tempTitleString;\n        else {\n          popoverOrModalElement.querySelector('[data-mds-dtp-title]')!.innerHTML = this.tempTitleString;\n        }\n        popoverOrModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.removeAttribute('hidden');\n      }\n      const yearListBox = popoverOrModalElement.querySelector('[data-mds-dtp-year-list-box]');\n      yearListBox!.classList.add('w-0');\n      yearListBox!.innerHTML = '';\n    }\n  }\n  private showYearsBox = (element: Element): void => {\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) {\n      return;\n    }\n    const setting = instance.setting;\n    const mdDatePickerContainer = setting.inLine ? element.closest('[data-mds-dtp-guid]') : element.closest('[data-mds-dtp]');\n    if (mdDatePickerContainer == null) return;\n    this.tempTitleString = setting.inLine\n      ? mdDatePickerContainer.querySelector('[mds-dtp-inline-header]')!.textContent!.trim()\n      : mdDatePickerContainer.querySelector('[data-mds-dtp-title]')!.textContent!.trim();\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, 0);\n    const dateTimePickerYearsToSelectHtml = yearsToSelectObject.html;\n    const dateTimePickerYearsToSelectContainer = mdDatePickerContainer.querySelector('[data-mds-dtp-year-list-box]');\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\n    dateTimePickerYearsToSelectContainer!.innerHTML = dateTimePickerYearsToSelectHtml;\n    dateTimePickerYearsToSelectContainer!.classList.remove('w-0');\n    if (setting.inLine) {\n      mdDatePickerContainer.classList.add('overflow-hidden')\n      dateTimePickerYearsToSelectContainer!.classList.add('inline');\n    } else if (setting.modalMode) {\n      mdDatePickerContainer.querySelector('[data-name=\"mds-dtp-body\"]')!.setAttribute('hidden', '');\n    } else {\n      dateTimePickerYearsToSelectContainer!.classList.remove('inline');\n    }\n  }\n  private changeYearList = (element: Element): void => {\n    // کلیک روی دکمه های عوض کردن رنج سال انتخابی\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) {\n      return;\n    }\n    const setting = instance.setting;\n    const isNext = element.getAttribute('data-year-range-button-change') == '1';\n    const yearStart = Number(element.getAttribute('data-year'));\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, isNext ? yearStart : yearStart - setting.yearOffset * 2);\n    if (setting.inLine)\n      element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\n    else\n      element.closest('[data-mds-dtp]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\n  }\n  private getPopoverHeaderTitle(setting: MdsPersianDateTimePickerSetting): string {\n    let selectedDateToShowJson: GetDateTimeJson1;\n    let title = '';\n    if (setting.isGregorian) {\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDateToShow);\n    } else {\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDateToShow);\n    }\n    if (setting.rangeSelector) {\n      const startDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, -setting.rangeSelectorMonthsToShow[0], setting.isGregorian);\n      const endDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, setting.rangeSelectorMonthsToShow[1], setting.isGregorian);\n      let statDateJson: GetDateTimeJson1;\n      let endDateJson: GetDateTimeJson1;\n      if (setting.isGregorian) {\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJson1(startDate);\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJson1(endDate);\n      } else {\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(startDate);\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(endDate);\n      }\n      const startMonthName = MdsPersianDateTimePicker.getMonthName(statDateJson.month - 1, setting.isGregorian);\n      const endMonthName = MdsPersianDateTimePicker.getMonthName(endDateJson.month - 1, setting.isGregorian);\n      title = `${startMonthName} ${statDateJson.year} - ${endMonthName} ${endDateJson.year}`;\n    }\n    else\n      title = `${MdsPersianDateTimePicker.getMonthName(selectedDateToShowJson.month - 1, setting.isGregorian)} ${selectedDateToShowJson.year}`;\n    if (!setting.isGregorian)\n      title = MdsPersianDateTimePicker.toPersianNumber(title);\n    return title;\n  }\n  private setPopoverHeaderHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, htmlString: string): void => {\n    // element = المانی که روی آن فعالیتی انجام شده و باید عنوان تقویم آن عوض شود    \n    if (this.bsPopover != null) {\n      const popoverElement = this.getPopover(element);\n      if (popoverElement == null) return;\n      popoverElement.querySelector('[data-mds-dtp-title]')!.innerHTML = htmlString;\n    } else if (setting.inLine) {\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-name=\"dtp-years-container\"]')!;\n      inlineTitleBox.innerHTML = htmlString;\n      inlineTitleBox.classList.remove('w-0');\n    }\n    else if (setting.modalMode) {\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-title] .modal-title')!;\n      inlineTitleBox.innerHTML = htmlString;\n    }\n  }\n  private getDateTimePickerBodyHtml(setting: MdsPersianDateTimePickerSetting): string {\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\n    let html = MdsPersianDateTimePicker.dateTimePickerHtmlTemplate;\n\n    html = html.replace(/\\{\\{inlineAttr\\}\\}/img, setting.inLine ? 'data-inline' : '');\n    html = html.replace(/\\{\\{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\n    html = html.replace(/\\{\\{selectedDateStringAttribute\\}\\}/img, setting.inLine ? '' : 'hidden');\n    html = html.replace(/\\{\\{goTodayText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.goTodayText : MdsPersianDateTimePicker.goTodayTextPersian);\n    html = html.replace(/\\{\\{timePickerAttribute\\}\\}/img, setting.enableTimePicker ? '' : 'hidden');\n\n    const disabledDays = MdsPersianDateTimePicker.getDisabledDateObject(setting);\n    let title = '';\n    let todayDateString = '';\n    let todayDateTimeJson: GetDateTimeJson1;\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\n    let disableBeforeDateTimeJson: GetDateTimeJson1 | null = disabledDays[0];\n    let disableAfterDateTimeJson: GetDateTimeJson1 | null = disabledDays[1];\n\n    if (setting.isGregorian) {\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\n    } else {\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\n    }\n\n    title = this.getPopoverHeaderTitle(setting);\n    todayDateString = `${setting.isGregorian ? 'Today,' : 'امروز،'} ${todayDateTimeJson.day} ${MdsPersianDateTimePicker.getMonthName(todayDateTimeJson.month - 1, setting.isGregorian)} ${todayDateTimeJson.year}`;\n    if (!setting.isGregorian) {\n      todayDateString = MdsPersianDateTimePicker.toPersianNumber(todayDateString);\n    }\n\n    if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year <= selectedDateTimeToShowJson.year && disableAfterDateTimeJson.month < selectedDateTimeToShowJson.month)\n      selectedDateToShow = setting.isGregorian ? new Date(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month, disableAfterDateTimeJson.day);\n\n    if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year >= selectedDateTimeToShowJson.year && disableBeforeDateTimeJson.month > selectedDateTimeToShowJson.month)\n      selectedDateToShow = setting.isGregorian ? new Date(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month, disableBeforeDateTimeJson.day);\n\n    let monthsTdHtml = '';\n    // let tempSelectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    let numberOfNextMonths = setting.rangeSelectorMonthsToShow[1] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[1];\n    let numberOfPrevMonths = setting.rangeSelectorMonthsToShow[0] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[0];\n    numberOfPrevMonths *= -1;\n    for (let i1 = numberOfPrevMonths; i1 < 0; i1++) {\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i1, setting.isGregorian);\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, true);\n    }\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, false);\n    for (let i2 = 1; i2 <= numberOfNextMonths; i2++) {\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i2, setting.isGregorian);\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, true, false);\n    }\n    // setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n\n    let totalMonthNumberToShow = Math.abs(numberOfPrevMonths) + 1 + numberOfNextMonths;\n    let monthTdStyle = totalMonthNumberToShow > 1 ? 'width: ' + (100 / totalMonthNumberToShow).toString() + '%;' : '';\n\n    monthsTdHtml = monthsTdHtml.replace(/\\{\\{monthTdStyle\\}\\}/img, monthTdStyle);\n\n    html = html.replace(/\\{\\{dtpInlineHeader\\}\\}/img, title);\n    html = html.replace(/\\{\\{todayDateString\\}\\}/img, todayDateString);\n    html = html.replace(/\\{\\{time\\}\\}/img, `${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.hour)}:${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.minute)}`);\n    html = html.replace(/\\{\\{monthsTdHtml\\}\\}/img, monthsTdHtml);\n\n    return html;\n  }\n  private updateCalendarBodyHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, updatePopoverContent = false): void => {\n    const calendarHtml = this.getDateTimePickerBodyHtml(setting);\n    const dtpInlineHeader = calendarHtml.match(/<th mds-dtp-inline-header\\b[^>]*>(.*?)<\\/th>/img)![0];\n    this.tempTitleString = dtpInlineHeader;\n    if (!setting.inLine && updatePopoverContent && !setting.modalMode) {\n      const popover = this.getBsPopoverInstance();\n      if (!popover) {\n        console.error(\"mds.bs.datetimepicker: `BsPopoverInstance` is null!\");\n        return;\n      }\n      setTimeout(() => {\n        popover.setContent({\n          '.popover-header': dtpInlineHeader,\n          '.popover-body': calendarHtml\n        });\n      }, 100);\n      return;\n    }\n    let containerElement = element.closest('[data-name=\"mds-dtp-body\"]');\n    if (containerElement == null) {\n      containerElement = element.closest('[data-mds-dtp-guid]');\n      if (containerElement == null) {\n        console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found !\")\n        return;\n      }\n      if (setting.modalMode)\n        containerElement = containerElement.querySelector('[data-name=\"mds-dtp-body\"]');\n    }\n    if (containerElement == null) {\n      console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found!\")\n      return;\n    }\n    this.setPopoverHeaderHtml(element, setting, dtpInlineHeader.trim());\n    containerElement.innerHTML = calendarHtml;\n    this.hideYearsBox(element, setting);\n    this.enableEvents();\n    this.enableInLineEvents();\n  }\n  private changeMonth = (element: Element): void => {\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) {\n      return;\n    }\n    if (instance.setting.disabled) return;\n    const dateNumber = Number(element.getAttribute('data-number'));\n    const setting = instance.setting;\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\n    this.updateCalendarBodyHtml(element, setting);\n    if (setting.calendarViewOnChange != undefined)\n      setting.calendarViewOnChange(selectedDateToShow);\n  }\n  private selectDay = (element: Element): void => {\n    // کلیک روی روزها\n    // انتخاب روز\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    if (instance.setting.disabled || element.getAttribute('disabled') != undefined)\n      return;\n    let dateNumber = Number(element.getAttribute('data-number'));\n    const setting = instance.setting;\n    const disabled = element.getAttribute('disabled') != undefined;\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\n      setting.selectedDate.setHours(0);\n      setting.selectedDate.setMinutes(0);\n      setting.selectedDate.setSeconds(0);\n    }\n    let selectedDateJson = !setting.selectedDate ? null : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate);\n    let selectedDateToShow = !setting.selectedDateToShow ? new Date() : MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\n    let selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\n    if (disabled) {\n      if (setting.onDayClick != undefined) setting.onDayClick(setting);\n      return;\n    }\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\n    if (setting.rangeSelector) { // اگر رنج سلکتور فعال بود\n      if (setting.rangeSelectorStartDate != null && setting.rangeSelectorEndDate != null) {\n        setting.selectedRangeDate = [];\n        setting.rangeSelectorStartDate = null;\n        setting.rangeSelectorEndDate = null;\n        let closestSelector = '[data-mds-dtp]';\n        if (setting.inLine)\n          closestSelector = '[data-mds-dtp-guid]';\n        element.closest(closestSelector)?.querySelectorAll('td.selected-range-days-start-end,td.selected-range-days')\n          .forEach(e => {\n            e.classList.remove('selected-range-days');\n            e.classList.remove('selected-range-days-start-end');\n          });\n      }\n      if (setting.rangeSelectorStartDate == undefined) {\n        element.classList.add('selected-range-days-start-end');\n        setting.rangeSelectorStartDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n        setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n        setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n      } else if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate == undefined) {\n        if (setting.rangeSelectorStartDate.getTime() >= selectedDateToShow.getTime())\n          return;\n        element.classList.add('selected-range-days-start-end');\n        setting.rangeSelectorEndDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n        MdsPersianDateTimePicker.setSelectedData(setting);\n      }\n      MdsPersianDateTimePickerData.set(instance.guid, instance);\n      if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined) {\n        setting.selectedRangeDate = [MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate), MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate)];\n        if (!setting.inLine)\n          instance.hide();\n        else\n          this.updateCalendarBodyHtml(element, setting);\n      }\n      return;\n    }\n    setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\n      setting.selectedDate.setHours(0);\n      setting.selectedDate.setMinutes(0);\n      setting.selectedDate.setSeconds(0);\n    }\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\n    if (selectedDateJson != undefined) {\n      if (setting.enableTimePicker) {\n        selectedDateJson.hour = selectedDateToShowJson.hour;\n        selectedDateJson.minute = selectedDateToShowJson.minute;\n        selectedDateJson.second = selectedDateToShowJson.second;\n      } else {\n        selectedDateJson.hour = 0;\n        selectedDateJson.minute = 0;\n        selectedDateJson.second = 0;\n      }\n      setting.selectedDate.setHours(selectedDateJson.hour);\n      setting.selectedDate.setMinutes(selectedDateJson.minute);\n      setting.selectedDate.setSeconds(selectedDateJson.second);\n    }\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\n    MdsPersianDateTimePicker.setSelectedData(setting);\n    element.setAttribute('data-mds-dtp-selected-day', '');\n    if (setting.toDate || setting.fromDate) {\n      // وقتی روی روز یکی از تقویم ها کلیک می شود\n      // باید تقویم دیگر نیز تغییر کند و روزهایی از آن غیر فعال شود\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\n      if (setting.fromDate && toDateElement != undefined) {\n        const instance = MdsPersianDateTimePicker.getInstance(toDateElement);\n        if (instance != null) {\n          if (setting.inLine)\n            this.updateCalendarBodyHtml(toDateElement, instance.setting);\n          else\n            instance.initializeBsPopover(instance.setting);\n        }\n      } else if (setting.toDate && fromDateElement != undefined) {\n        const instance = MdsPersianDateTimePicker.getInstance(fromDateElement);\n        if (instance != null) {\n          if (setting.inLine)\n            this.updateCalendarBodyHtml(fromDateElement, instance.setting);\n          else\n            instance.initializeBsPopover(instance.setting);\n        }\n      } else\n        this.updateCalendarBodyHtml(element, setting);\n    } else {\n      this.updateCalendarBodyHtml(element, setting, true);\n    }\n    if (setting.onDayClick != undefined)\n      setting.onDayClick(setting);\n    if (!setting.inLine) {\n      instance.hide();\n    } else {\n      // حذف روزهای انتخاب شده در تقویم این لاین\n      element.closest(`[data-mds-dtp-guid=\"${this.guid}\"]`)!\n        .querySelectorAll('[data-day]')\n        .forEach(e => e.removeAttribute('data-mds-dtp-selected-day'));\n    }\n  }\n  private hoverOnDays = (e: Event): void => {\n    // هاور روی روزها\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    const setting = instance.setting;\n\n    if (element.getAttribute('disabled') != undefined || !setting.rangeSelector ||\n      (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)) return;\n\n    const dateNumber = Number(element.getAttribute('data-number'));\n    const allDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-day]'));\n    allDayElements.forEach(e => {\n      e.classList.remove('selected-range-days');\n      e.classList.remove('selected-range-days-nm');\n    });\n\n    const allNextOrPrevMonthDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-nm]'));\n    allNextOrPrevMonthDayElements.forEach(e => {\n      e.classList.remove('selected-range-days');\n      e.classList.remove('selected-range-days-nm');\n    });\n\n    const rangeSelectorStartDate = !setting.rangeSelectorStartDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate);\n    const rangeSelectorEndDate = !setting.rangeSelectorEndDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate);\n    let rangeSelectorStartDateNumber = 0;\n    let rangeSelectorEndDateNumber = 0;\n\n    if (setting.isGregorian) {\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\n    } else {\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\n    }\n\n    if (rangeSelectorStartDateNumber > 0 && dateNumber > rangeSelectorStartDateNumber) {\n      for (var i1 = rangeSelectorStartDateNumber; i1 <= dateNumber; i1++) {\n        allDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\n          .forEach(e => e.classList.add('selected-range-days'));\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\n          .forEach(e => e.classList.add('selected-range-days-nm'));\n      }\n    } else if (rangeSelectorEndDateNumber > 0 && dateNumber < rangeSelectorEndDateNumber) {\n      for (var i2 = dateNumber; i2 <= rangeSelectorEndDateNumber; i2++) {\n        allDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\n          .forEach(e => e.classList.add('selected-range-days'));\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\n          .forEach(e => e.classList.add('selected-range-days-nm'));\n      }\n    }\n\n  }\n  private goToday = (e: Event): void => {\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    const setting = instance.setting;\n    setting.selectedDateToShow = new Date();\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\n    this.updateCalendarBodyHtml(element, setting);\n  }\n  private timeChanged = (e: Event): void => {\n    // عوض کردن ساعت\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    const setting = instance.setting;\n    const value: string = (<any>element).value;\n    if (!setting.enableTimePicker) return;\n    if (setting.selectedDateToShow == undefined)\n      setting.selectedDateToShow = new Date();\n    let hour = Number(value.substr(0, 2));\n    let minute = Number(value.substr(3, 2));\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setHours(hour));\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setMinutes(minute));\n    if (setting.selectedDate == undefined)\n      setting.selectedDate = new Date();\n    setting.selectedDate = new Date(setting.selectedDate.setHours(hour));\n    setting.selectedDate = new Date(setting.selectedDate.setMinutes(minute));\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\n    MdsPersianDateTimePicker.setSelectedData(setting);\n  }\n  private enableMainEvents(): void {\n    if (this.setting.inLine) return;\n    if (this.bsPopover != null) {\n      this.element.addEventListener('shown.bs.popover', this.popoverOrModalShownEvent);\n      this.element.addEventListener('hidden.bs.popover', this.popoverOrModalHiddenEvent);\n      this.element.addEventListener('inserted.bs.popover', this.popoverInsertedEvent);\n      this.element.addEventListener('click', this.showPopoverEvent, true);\n    } else if (this.bsModal != null) {\n      const modalElement = this.getModal();\n      if (modalElement == null) {\n        console.error(\"mds.bs.datetimepicker: `modalElement` not found!\");\n        return;\n      }\n      modalElement.addEventListener('shown.bs.modal', this.popoverOrModalShownEvent);\n      modalElement.addEventListener('hidden.bs.modal', this.popoverOrModalHiddenEvent);\n    }\n  }\n  private popoverInsertedEvent = (e: Event): void => {\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    const setting = instance.setting;\n    this.hideYearsBox(element, setting);\n  }\n  private popoverOrModalShownEvent = (): void => {\n    this.enableEvents();\n  }\n  private popoverOrModalHiddenEvent = (): void => {\n    this.disableEvents();\n  }\n  private enableInLineEvents(): void {\n    if (!this.setting.inLine) return;\n    setTimeout(() => {\n      const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\n      if (dtp != null) {\n        dtp.querySelector('[data-mds-dtp-time]')?.addEventListener('change', this.timeChanged, false);\n        dtp.addEventListener('click', this.selectCorrectClickEvent);\n        dtp.querySelectorAll('[data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\n      }\n    }, 100);\n  }\n  private enableEvents(): void {\n    if (this.setting.inLine) return;\n    setTimeout(() => {\n      document.addEventListener('click', this.selectCorrectClickEvent, false);\n      document.querySelector('html')!.addEventListener('click', this.hidePopoverEvent, true);\n      document.querySelectorAll('[data-mds-dtp-time]').forEach(e => e.addEventListener('change', this.timeChanged, false));\n      document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\n    }, 500);\n  }\n  private disableEvents(): void {\n    document.removeEventListener('click', this.selectCorrectClickEvent);\n    document.querySelector('html')!.removeEventListener('click', this.hidePopoverEvent);\n    document.querySelectorAll('[data-mds-dtp-time]')?.forEach(e => e.removeEventListener('change', this.timeChanged));\n    document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays));\n    const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\n    if (dtp != null) {\n      dtp.removeEventListener('click', this.selectCorrectClickEvent, false);\n      dtp.querySelectorAll('[data-day]')?.forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays, true));\n    }\n  }\n  private selectCorrectClickEvent = (e: Event): void => {\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (!instance) return;\n    if (instance != null && (instance.setting.disabled || instance.element.getAttribute('disabled') != undefined))\n      return;\n    if (element.getAttribute('mds-pdtp-select-year-button') != null) {\n      instance.showYearsBox(element);\n    } else if (element.getAttribute('data-mds-dtp-go-today') != null) {\n      this.goToday(e);\n    } else if (element.getAttribute('data-day') != null) {\n      this.selectDay(element);\n    } else if (element.getAttribute('data-mds-hide-year-list-box')) {\n      this.hideYearsBox(element, instance.setting);\n    } else if (element.getAttribute('data-change-date-button')) {\n      this.changeMonth(element);\n    } else if (element.getAttribute('data-year-range-button-change') != null && element.getAttribute('disabled') == null) {\n      this.changeYearList(element);\n    }\n  }\n  private showPopoverEvent = (e: Event): void => {\n    MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\n    const element = <Element>e.target;\n    const instance = MdsPersianDateTimePicker.getInstance(element);\n    if (instance == null || instance.setting.disabled) return;\n    instance.show();\n  }\n  private hidePopoverEvent = (e: Event): void => {\n    const element = <Element>e.target;\n    if (element.tagName == 'HTML') {\n      MdsPersianDateTimePickerData.getAll().forEach(i => !i.setting.modalMode ? i.hide() : () => { });\n      return;\n    }\n    const isWithinDatePicker = element.closest('[data-mds-dtp]') != null || element.getAttribute('data-mds-dtp-guid') != null || element.getAttribute('data-mds-dtp-go-today') != null;\n    if (!isWithinDatePicker) {\n      MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\n    }\n  }\n\n  /**\n   * نمایش تقویم\n   */\n  show(): void {\n    this.bsModal?.show();\n    this.bsPopover?.show();\n  }\n  /**\n   * مخفی کردن تقویم\n   */\n  hide(): void {\n    this.bsModal?.hide();\n    this.bsPopover?.hide();\n  }\n  /**\n   * مخفی یا نمایش تقویم \n   */\n  toggle(): void {\n    if (this.bsPopover == null) return;\n    this.bsPopover.toggle();\n  }\n  /**\n   * فعال کردن تقویم\n   */\n  enable(): void {\n    this.setting.disabled = false;\n    this.element.removeAttribute(\"disabled\");\n    MdsPersianDateTimePickerData.set(this.guid, this);\n    if (this.bsPopover != null)\n      this.bsPopover.enable();\n  }\n  /**\n   * غیر فعال کردن تقویم\n   */\n  disable(): void {\n    this.setting.disabled = true;\n    this.element.setAttribute(\"disabled\", '');\n    MdsPersianDateTimePickerData.set(this.guid, this);\n    if (this.bsPopover != null)\n      this.bsPopover.disable();\n  }\n  /**\n   * بروز کردن محل قرار گرفتن تقویم\n   */\n  updatePosition(): void {\n    this.bsPopover?.update();\n    this.bsModal?.handleUpdate();\n  }\n  /**\n   * به روز کردن متن نمایش تاریخ روز انتخاب شده\n   */\n  updateSelectedDateText(): void {\n    MdsPersianDateTimePicker.setSelectedData(this.setting);\n  }\n  /**\n   * از بین بردن تقویم\n   */\n  dispose(): void {\n    if (this.bsPopover != null)\n      this.bsPopover.dispose();\n    if (this.bsModal != null)\n      this.bsModal.dispose();\n    this.element.removeEventListener('click', this.showPopoverEvent);\n    this.bsPopover = null;\n    this.bsModal = null;\n  }\n  /**\n   * دریافت اینستنس پاپ آور بوت استرپ\n   */\n  getBsPopoverInstance(): Popover | null {\n    return this.bsPopover;\n  }\n  /**\n   * دریافت اینستنس مدال بوت استرپ\n   * در صورتی که آپشن modalMode را صحیح کرده باشید\n   */\n  getBsModalInstance(): Modal | null {\n    return this.bsModal;\n  }\n  /**\n   * دریافت متن تاریخ انتخاب شده\n   */\n  getText(): string {\n    return MdsPersianDateTimePicker.getSelectedDateFormatted(this.setting);\n  }\n  /**\n   * دریافت آبجکت تاریخ انتخاب شده\n   */\n  getSelectedDate(): Date | null {\n    return this.setting.selectedDate;\n  }\n  /**\n   * دریافت آبجکت های تاریخ های انتخاب شده در مد رنج سلکتور\n   */\n  getSelectedDateRange(): Date[] {\n    return this.setting.selectedRangeDate;\n  }\n  /**\n  * بروز کردن تاریخ انتخاب شده\n  */\n  setDate(date: Date): void {\n    this.updateOptions({\n      selectedDate: date,\n      selectedDateToShow: date\n    });\n  }\n  /**\n  * بروز کردن تاریخ انتخاب شده با استفاده از تاریخ شمسی\n  */\n  setDatePersian(yearPersian: number, monthPersian: number, dayPersian: number): void {\n    const gregorianDateJson = MdsPersianDateTimePicker.toGregorian(yearPersian, monthPersian, dayPersian);\n    console.log(gregorianDateJson);\n    const date = new Date(gregorianDateJson.gy, gregorianDateJson.gm - 1, gregorianDateJson.gd);\n    this.updateOptions({\n      selectedDate: date,\n      selectedDateToShow: date\n    });\n  }\n  /**\n  * بروز کردن رنج تاریخی انتخاب شده\n  */\n  setDateRange(startDate: Date, endDate: Date): void {\n    this.updateOptions({\n      selectedDate: startDate,\n      selectedDateToShow: startDate,\n      selectedRangeDate: [startDate, endDate]\n    });\n  }\n  /**\n  * حذف تاریخ انتخاب شده\n  */\n  clearDate(): void {\n    this.updateOptions({\n      selectedDate: null,\n      selectedDateToShow: new Date(),\n    });\n  }\n  /**\n   * بروز کردن تنظیمات تقویم\n   * @param optionName نام آپشن مورد نظر\n   * @param value مقدار\n   */\n  updateOption(optionName: string, value: any): void {\n    if (!optionName) return;\n    value = MdsPersianDateTimePicker.correctOptionValue(optionName, value);\n    (<any>this.setting)[optionName] = value;\n    MdsPersianDateTimePickerData.set(this.guid, this);\n    this.initializeBsPopover(this.setting);\n  }\n  /**\n   * بروز کردن تنظیمات تقویم\n   * @param options تنظیمات مورد نظر\n   */\n  updateOptions(options: any): void {\n    Object.keys(options).forEach((key) => {\n      (<any>this.setting)[key] = MdsPersianDateTimePicker.correctOptionValue(key, (<any>options)[key]);\n    });\n    MdsPersianDateTimePickerData.set(this.guid, this);\n    this.initializeBsPopover(this.setting);\n  }\n  /**\n * تبدیل آبجکت تاریخ به رشته\n * @param date آبجکت تاریخ\n * @param isGregorian آیا تاریخ میلادی مد نظر است یا تبدیل به شمسی شود\n * @param format فرمت مورد نظر برای تبدیل تاریخ به رشته\n */\n  static convertDateToString = (date: Date, isGregorian: boolean, format: string): string => {\n    return MdsPersianDateTimePicker.getDateTimeString(!isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(date) : MdsPersianDateTimePicker.getDateTimeJson1(date), format, isGregorian, !isGregorian);\n  };\n  /**\n * تبدیل آبجکت تاریخ به شمسی\n * @param date آبجکت تاریخ\n */\n  static convertDateToJalali = (date: Date): MdsPersianDateTimePickerConvertedDateModel => {\n    const dateTimeJson1 = MdsPersianDateTimePicker.getDateTimeJson1(date);\n    const jalaliJsonModel = MdsPersianDateTimePicker.toJalali(dateTimeJson1.year, dateTimeJson1.month, dateTimeJson1.day);\n    return {\n      year: jalaliJsonModel.jy,\n      month: jalaliJsonModel.jm,\n      day: jalaliJsonModel.jd,\n    }\n  };\n  /**\n   * دریافت اینستنس تقویم از روی المانی که تقویم روی آن فعال شده است\n   * @param element المانی که تقویم روی آن فعال شده\n   * @returns اینستنس تقویم\n   */\n  static getInstance(element: Element): MdsPersianDateTimePicker | null {\n    let elementGuid = element.getAttribute('data-mds-dtp-guid');\n    if (!elementGuid) {\n      elementGuid = element.closest('[data-mds-dtp-guid]')?.getAttribute('data-mds-dtp-guid') ?? null;\n      if (!elementGuid) {\n        const id = element.closest('[data-mds-dtp]')?.getAttribute('id');\n        if (!id)\n          return null;\n        elementGuid = document.querySelector('[aria-describedby=\"' + id + '\"]')?.getAttribute('data-mds-dtp-guid') ?? null;\n        if (!elementGuid)\n          return null;\n      }\n    };\n    return MdsPersianDateTimePickerData.get(elementGuid);\n  }\n\n  // #endregion\n}\n\ninterface GetDateTimeJson1 {\n  year: number,\n  month: number,\n  day: number,\n  hour: number,\n  minute: number,\n  second: number,\n  millisecond: number,\n  dayOfWeek: number\n}\n\ninterface JalaliJsonModel {\n  jy: number,\n  jm: number,\n  jd: number\n}\n\n\ninterface GregorianJsonModel {\n  gy: number,\n  gm: number,\n  gd: number\n}\n\ninterface JalCalModel {\n  leap: number,\n  gy: number,\n  march: number\n}\n\ninterface MdsPersianDateTimePickerYearToSelect {\n  yearStart: number,\n  yearEnd: number,\n  html: string\n}\n\ntype PopoverPlacement = 'auto' | 'top' | 'bottom' | 'left' | 'right';\n\nexport class MdsPersianDateTimePickerSetting {\n  /**\n   * محل قرار گرفتن تقویم\n   */\n  placement: PopoverPlacement | (() => PopoverPlacement) | undefined = 'bottom';\n  /**\n   * فعال بودن تایم پیکر\n   */\n  enableTimePicker = false;\n  /**\n   * سلکتور نمایش روز انتخاب شده\n   */\n  targetTextSelector = '';\n  /**\n   * سلکتور ذخیره تاریخ میلادی، برای روز انتخاب شده\n   */\n  targetDateSelector = '';\n  /**\n   * آیا تقویم برای کنترل روز پایانی تاریخ است\n   */\n  toDate = false;\n  /**\n   * آیا تقویم برای کنترل روز شروع تاریخ است\n   */\n  fromDate = false;\n  /**\n   * شناسه گروه در حالتی که از \n   * toDate\n   * و\n   * fromDate\n   * استفاده شده است\n   */\n  groupId = '';\n  /**\n   * آیا تقویم غیر فعال است؟\n   */\n  disabled = false;\n  /**\n   * فرمت نمایش روز انتخاب شده تقویم\n   */\n  textFormat = '';\n  /**\n   * فرمت ذخیره تاریخ میلادی انتخاب شده\n   */\n  dateFormat = '';\n  /**\n   * آیا تقویم میلادی استفاده شود؟\n   */\n  isGregorian = false;\n  /**\n   * آیا تقویم به صورت این لاین نمایش داده شود؟\n   */\n  inLine = false;\n  /**\n   * تاریخ انتخاب شده\n   */\n  selectedDate: Date | null = null;\n  /**\n   * تاریخی که نمایش تقویم از آن شروع می شود\n   */\n  selectedDateToShow = new Date();\n  /**\n   * تعداد سال های قابل نمایش در لیست سال های قابل انتخاب\n   */\n  yearOffset = 15;\n  /**\n   * تاریخ میلادی روزهای تعطیل\n   */\n  holidays: Date[] = [];\n  /**\n   * تاریخ میلادی روزهای غیر فعال\n   */\n  disabledDates: Date[] = [];\n  /**\n   * عدد روزهایی از هفته که غیر فعال هستند\n   */\n  disabledDays: number[] = [];\n  /**\n   * تاریخ میلادی روزهای خاص\n   */\n  specialDates: Date[] = [];\n  /**\n   * آیا روزهای قبل از امروز غیر فعال شوند؟\n   */\n  disableBeforeToday = false;\n  /**\n   * آیا روزهای بعد از امروز غیر فعال شوند؟\n   */\n  disableAfterToday = false;\n  /**\n   * روزهای قبل از این تاریخ غیر فعال شود\n   */\n  disableBeforeDate: Date | null = null;\n  /**\n   * روزهای بعد از این تاریخ غیر فعال شود\n   */\n  disableAfterDate: Date | null = null;\n  /**\n   * آیا تقویم به صورت انتخاب بازه نمایش داده شود؟\n   */\n  rangeSelector = false;\n  /**\n   * تاریخ شروع تقویم در مد انتخاب بازه تاریخی برای نمایش\n   */\n  rangeSelectorStartDate: Date | null = null;\n  /**\n   * تاریخ پایان تقویم در مد انتخاب بازه تاریخی برای نمایش\n   */\n  rangeSelectorEndDate: Date | null = null;\n  /**\n   * تعداد ماه های قابل نمایش در قابلیت انتخاب بازه تاریخی\n   */\n  rangeSelectorMonthsToShow: number[] = [0, 0];\n  /**\n   * تاریخ های انتخاب شده در مد بازه انتخابی\n   */\n  selectedRangeDate: Date[] = [];\n  /**\n   * آیا تقویم به صورت مدال نمایش داده شود\n   */\n  modalMode = false;\n  /**\n   * تبدیل اعداد به فارسی\n   */\n  persianNumber = false;\n  /**\n   * رویداد عوض شدن ماه و تاریخ در دیت پیکر\n   * @param _ تاریخ ماه انتخابی\n   */\n  calendarViewOnChange = (_: Date) => { };\n  /**\n   * رویداد انتخاب روز در دیت پیکر\n   * @param _ تمامی تنظیمات دیت پیکر\n   */\n  onDayClick = (_: MdsPersianDateTimePickerSetting) => { }\n}\n\nexport interface MdsPersianDateTimePickerConvertedDateModel {\n  year: number,\n  month: number,\n  day: number,\n}\n\nconst MdsPersianDateTimePickerElementMap = new Map();\nvar MdsPersianDateTimePickerData = {\n  set(key: string, instance: MdsPersianDateTimePicker): void {\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\n      MdsPersianDateTimePickerElementMap.set(key, instance);\n      return;\n    }\n    MdsPersianDateTimePickerElementMap.set(key, instance);\n  },\n  get(key: string): MdsPersianDateTimePicker {\n    return MdsPersianDateTimePickerElementMap.get(key) || null;\n  },\n  getAll(): MdsPersianDateTimePicker[] {\n    return Array.from(MdsPersianDateTimePickerElementMap, ([_name, value]) => value);\n  },\n  remove(key: string): void {\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\n      return;\n    }\n    MdsPersianDateTimePickerElementMap.delete(key);\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(348);\n"],"names":["___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GLOBAL_THIS___","module","exports","globalThis","g","this","Function","e","window","self","bootstrap","MdsPersianDateTimePicker","constructor","element","setting","guid","bsPopover","bsModal","tempTitleString","hideYearsBox","inLine","dtpInLine","closest","dtpInlineHeaderElement","querySelector","innerHTML","yearListBoxElement","classList","add","inlineYearsContainerElement","remove","popoverOrModalElement","modalMode","getModal","getPopover","removeAttribute","yearListBox","showYearsBox","instance","getInstance","mdDatePickerContainer","textContent","trim","yearsToSelectObject","getYearsBoxBodyHtml","dateTimePickerYearsToSelectHtml","html","dateTimePickerYearsToSelectContainer","setPopoverHeaderHtml","getYearsBoxHeaderHtml","yearStart","yearEnd","setAttribute","changeYearList","isNext","getAttribute","Number","yearOffset","htmlString","popoverElement","inlineTitleBox","updateCalendarBodyHtml","updatePopoverContent","calendarHtml","getDateTimePickerBodyHtml","dtpInlineHeader","match","popover","getBsPopoverInstance","setTimeout","setContent","console","error","containerElement","enableEvents","enableInLineEvents","changeMonth","disabled","dateNumber","selectedDateToShow","getClonedDate","getDateTime4","isGregorian","MdsPersianDateTimePickerData","set","undefined","calendarViewOnChange","selectDay","selectedDate","enableTimePicker","setHours","setMinutes","setSeconds","selectedDateJson","getDateTimeJson1","Date","selectedDateToShowJson","onDayClick","rangeSelector","rangeSelectorStartDate","rangeSelectorEndDate","selectedRangeDate","closestSelector","querySelectorAll","forEach","getTime","setSelectedData","hide","hour","minute","second","toDate","fromDate","toDateElement","document","groupId","fromDateElement","initializeBsPopover","hoverOnDays","target","allDayElements","slice","call","allNextOrPrevMonthDayElements","rangeSelectorStartDateNumber","rangeSelectorEndDateNumber","convertToNumber3","convertToNumber1","getDateTimeJsonPersian1","i1","filter","toString","value","indexOf","i2","goToday","timeChanged","substr","popoverInsertedEvent","popoverOrModalShownEvent","popoverOrModalHiddenEvent","disableEvents","selectCorrectClickEvent","showPopoverEvent","getAll","i","show","hidePopoverEvent","tagName","extend","MdsPersianDateTimePickerSetting","Error","textFormat","dateFormat","newGuid","static","gy","gm","gd","d2j","g2d","jy","jm","jd","d2g","j2d","jalCal","leap","n","breaks","bl","length","leapJ","jp","jump","div","mod","march","r","jdn","k","d","j","a","b","rangeSelectorMonthsToShow","dispose","title","getPopoverHeaderTitle","datePickerBodyHtml","tempDiv","createElement","setModalHtml","el","Modal","enableMainEvents","Popover","container","content","placement","trigger","template","popoverHtmlTemplate","sanitize","replace","c","Math","random","args","key","hasOwnProperty","dateTime","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","millisecond","getMilliseconds","dayOfWeek","getDay","floor","persianDate","toJalali","yearPersian","monthPersian","dayPersian","isNumber","gregorian","toGregorian","englishWeekDayIndex","weekDayNames","weekDayNamesPersian","monthIndex","monthNames","monthNamesPersian","shortDayNames","shortDayNamesPersian","persianYear","isLeapJalaliYear","numberOfDaysInMonth","isLeapYear","dateTimeLocal","previousMonth","daysInMonth","getDaysInMonth","dateTimeJsonPersian","getDateTime1","getDaysInMonthPersian","nextMonth","dateTimeJson","getDateTimeJson2","getDateTime2","resultDate","dateNow","disableBeforeToday","disableBeforeDate","disableAfterDate","disableAfterToday","addedMonth","dateTimeJson1","Object","assign","getDateTime3","zeroPad","optionName","keys","Array","isArray","item","shortHour","amPm","addMonthToDateTimeJson","isNaN","parseFloat","isFinite","inputNumber1","str1","nr","base","len","String","join","format","persianNumber","getMonthName","getWeekDayName","getShortHour","getAmPm","toPersianNumber","getDateTimeString","disableBeforeDateTimeJson","getLesserDisableBeforeDate","disableAfterDateTimeJson","getBiggerDisableAfterDate","toDateSetting","toDateSelectedDate","fromDateSetting","fromDateSelectedDate","targetTextElement","targetTextSelector","targetDateElement","targetDateSelector","changeEvent","Event","dateTimeTextFormat","getSelectedDateTimeTextFormatted","toLowerCase","dispatchEvent","dateTimeFormat","toEnglishNumber","getSelectedDateFormatted","popoverId","getElementById","prevModalElement","modalHtml","modalHtmlTemplate","appendChild","modalDialogElement","warn","yearToStart","disabledDateObj","getDisabledDateObject","todayDateTimeJson","selectedDateTimeToShowJson","dateTimePickerYearsToSelectHtmlTemplate","yearsBoxHtml","counter","disabledAttr","currentYearDateTimeJson","convertToNumber2","currentYearDisabledAttr","yearText","yearDateNumber","todayAttr","selectedYearAttr","selectedYearTitle","currentYearText","currentYearTextPersian","cancelText","cancelTextPersian","yearsRangeText","popoverHeaderSelectYearHtmlTemplate","previousText","previousTextPersian","nextText","nextTextPersian","getDateTimePickerMonthHtml","isNextMonth","isPrevMonth","selectedDateToShowTemp","selectedDateTime","isNextOrPrevMonth","dateTimePickerMonthTableHtmlTemplate","previousYearText","previousYearTextPersian","previousMonthText","previousMonthTextPersian","nextMonthText","nextMonthTextPersian","nextYearText","nextYearTextPersian","getWeekDayShortName","firstWeekDayNumber","dateTimeToShowJson","cellNumber","tdNumber","selectedDateNumber","selectedMonthName","numberOfDaysInCurrentMonth","numberOfDaysInPreviousMonth","tr","td","daysHtml","currentDateNumber","previousMonthDateNumber","nextMonthDateNumber","previousYearDateNumber","nextYearDateNumber","dayNumberInString","monthsDateNumberAndAttr","month1DateNumber","month2DateNumber","month3DateNumber","month4DateNumber","month5DateNumber","month6DateNumber","month7DateNumber","month8DateNumber","month9DateNumber","month10DateNumber","month11DateNumber","month12DateNumber","selectMonth1ButtonCssClass","selectMonth2ButtonCssClass","selectMonth3ButtonCssClass","selectMonth4ButtonCssClass","selectMonth5ButtonCssClass","selectMonth6ButtonCssClass","selectMonth7ButtonCssClass","selectMonth8ButtonCssClass","selectMonth9ButtonCssClass","selectMonth10ButtonCssClass","selectMonth11ButtonCssClass","selectMonth12ButtonCssClass","holidaysDateNumbers","disabledDatesNumber","specialDatesNumber","previousYearButtonDisabledAttribute","previousMonthButtonDisabledAttribute","selectYearButtonDisabledAttribute","nextMonthButtonDisabledAttribute","nextYearButtonDisabledAttribute","isTrAppended","getLastDayDateOfPreviousMonth","getFirstDayDateOfNextMonth","setFullYear","setMonth","holidays","push","disabledDates","specialDates","getDateTimeJsonPersian2","todayDateNumber","selectedYear","disableBeforeDateTimeNumber","disableAfterDateTimeNumber","currentMonthInfo","previousMonthDateTimeJson","outerHTML","todayText","todayTextPersian","disabledDays","nextMonthDateTimeJson","startDate","addMonthToDateTime","endDate","statDateJson","endDateJson","startMonthName","endMonthName","dateTimePickerHtmlTemplate","goTodayText","goTodayTextPersian","todayDateString","monthsTdHtml","numberOfNextMonths","numberOfPrevMonths","totalMonthNumberToShow","abs","monthTdStyle","addEventListener","modalElement","dtp","removeEventListener","toggle","enable","disable","updatePosition","update","handleUpdate","updateSelectedDateText","getBsModalInstance","getText","getSelectedDate","getSelectedDateRange","setDate","date","updateOptions","setDatePersian","gregorianDateJson","log","setDateRange","clearDate","updateOption","correctOptionValue","options","elementGuid","id","get","convertDateToString","convertDateToJalali","jalaliJsonModel","_","MdsPersianDateTimePickerElementMap","Map","has","from","_name","delete","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","Symbol","toStringTag"],"sourceRoot":""}